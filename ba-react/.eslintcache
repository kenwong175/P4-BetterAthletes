[{"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/index.js":"1","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/App.js":"2","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/reportWebVitals.js":"3","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/AllRoutes.jsx":"4","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/LandingPage/LandingPage.jsx":"5","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Auth/Register.jsx":"6","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/BetterAthletes.jsx":"7","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Auth/Login.jsx":"8","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/func/axiosApi.js":"9","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/Dashboard.jsx":"10","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/InnerNaviBar.jsx":"11","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteDash.jsx":"12","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachDash.jsx":"13","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/RecentlyCompleted.jsx":"14","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/TodaysAgenda.jsx":"15","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/PendingAthlete.jsx":"16","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/PendingCoachReview.jsx":"17","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthRecentlyCompleted.jsx":"18","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthPendingResults.jsx":"19","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthUpcoming.jsx":"20","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthTodayAgenda.jsx":"21","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/Workout/AddWorkOut.jsx":"22","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/Workout/ViewWorkOut.jsx":"23","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/AthleteProfile.jsx":"24","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/ViewClub.jsx":"25","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/Calendar/CalendarDisplay.jsx":"26","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/Calendar/DisplayMonth.jsx":"27","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/Calendar/DisplayWeek.jsx":"28"},{"size":607,"mtime":1607918306119,"results":"29","hashOfConfig":"30"},{"size":217,"mtime":1607917337576,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1607664515871,"results":"32","hashOfConfig":"30"},{"size":672,"mtime":1607917133764,"results":"33","hashOfConfig":"30"},{"size":2407,"mtime":1607832025892,"results":"34","hashOfConfig":"30"},{"size":5471,"mtime":1607918153734,"results":"35","hashOfConfig":"30"},{"size":1787,"mtime":1607962070873,"results":"36","hashOfConfig":"30"},{"size":3735,"mtime":1607918153726,"results":"37","hashOfConfig":"30"},{"size":304,"mtime":1607918153756,"results":"38","hashOfConfig":"30"},{"size":502,"mtime":1607917230202,"results":"39","hashOfConfig":"30"},{"size":2000,"mtime":1607942914467,"results":"40","hashOfConfig":"30"},{"size":3786,"mtime":1607917230203,"results":"41","hashOfConfig":"30"},{"size":3817,"mtime":1607917230211,"results":"42","hashOfConfig":"30"},{"size":732,"mtime":1607917230215,"results":"43","hashOfConfig":"30"},{"size":721,"mtime":1607917230217,"results":"44","hashOfConfig":"30"},{"size":738,"mtime":1607917230213,"results":"45","hashOfConfig":"30"},{"size":737,"mtime":1607917230214,"results":"46","hashOfConfig":"30"},{"size":936,"mtime":1607917230207,"results":"47","hashOfConfig":"30"},{"size":731,"mtime":1607917230206,"results":"48","hashOfConfig":"30"},{"size":723,"mtime":1607917230210,"results":"49","hashOfConfig":"30"},{"size":721,"mtime":1607917230209,"results":"50","hashOfConfig":"30"},{"size":13723,"mtime":1607942837821,"results":"51","hashOfConfig":"30"},{"size":11352,"mtime":1607929283872,"results":"52","hashOfConfig":"30"},{"size":3986,"mtime":1607938962401,"results":"53","hashOfConfig":"30"},{"size":1989,"mtime":1607942760651,"results":"54","hashOfConfig":"30"},{"size":3431,"mtime":1607967333257,"results":"55","hashOfConfig":"30"},{"size":653,"mtime":1607966500410,"results":"56","hashOfConfig":"30"},{"size":475,"mtime":1607966582442,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"mdkyf9",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/index.js",[],["120","121"],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/App.js",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/reportWebVitals.js",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/AllRoutes.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/LandingPage/LandingPage.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Auth/Register.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/BetterAthletes.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Auth/Login.jsx",["122","123"],"import { NavLink } from \"react-router-dom\";\nimport { Col, Form, Container, Button } from \"react-bootstrap\";\nimport React, {useState} from 'react';\nimport jwt_decode from 'jwt-decode';\nimport InnerNaviBar from \"../../InnerNaviBar\";\nimport {axiosInstance} from \"../../../func/axiosApi\"\n\nfunction Login() {\n  const [user, setUser] = useState({});\n\n  function handleChange(e) {\n    setUser((user) => ({ ...user, [e.target.name]: e.target.value }));\n  }\n\n  async function handleSubmit(e){\n    e.preventDefault();\n    try {\n      let resp = await axiosInstance.post(\"login\",{username: user.username, password: user.password});\n      axiosInstance.defaults.headers['Authorization'] = \"JWT \" + resp.data.access;\n      localStorage.setItem(\"token\", resp.data.access);\n      let token = localStorage.getItem(\"token\");\n      let decoded = jwt_decode(token);\n      localStorage.setItem(\"user\", decoded.username);\n      localStorage.setItem(\"is_coach\", decoded.is_coach);\n      // setIsAuth(true);\n    } catch (error) {\n      console.log(error);\n    }    \n  }\n\n  // Logout button that removes token\n  function logout(){\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"is_coach\");\n    axiosInstance.defaults.headers['Authorization'] = null;\n  }\n\n  // Test function to test token and authorization. Remove when done.\n  async function test(){\n    try {\n      let resp = await axiosInstance.get(\"workouts\");\n      console.log(resp)\n      // setIsAuth(true);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function test2(){\n    try {\n      let resp = await axiosInstance.post(\"token/verify\", {\n        'token': localStorage.getItem('token'),\n        'Content-Type': 'application/json',\n        'accept': 'application/json'\n      });\n    } catch (error) {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"is_coach\");\n      axiosInstance.defaults.headers['Authorization'] = null;\n      // setIsAuth(false);\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <Container className=\"text-center\">\n        <Col>\n          <h3>Better Athletes</h3>\n          <Form onSubmit={handleSubmit}>\n            <div>User Login</div>\n            {/* Username Input */}\n            <Form.Row>\n            <Form.Label>Username</Form.Label>\n              <Form.Control\n                placeholder=\"username\"\n                onChange={handleChange}\n                name=\"username\"\n              />\n            </Form.Row>\n            {/* Password Input */}\n            <Form.Row className=\"mb-3\">\n            <Form.Label>Password</Form.Label>\n              <Form.Control\n                onChange={handleChange}\n                placeholder=\"password\"\n                name=\"password\"\n                type=\"password\"\n              />\n            </Form.Row>\n            {/* Login button */}\n            <Form.Row className=\"mb-3\">\n              <Button type=\"submit\" block>\n                Login\n              </Button>\n            </Form.Row>\n          </Form>\n          {/* Logout button */}\n          <Form.Row className=\"mb-3\">\n          <Button onClick={logout} block>\n                Logout\n          </Button>\n          </Form.Row>\n          <Button onClick={test} block>\n                {/* For you to test the GET function to get workouts list */}\n                Test\n          </Button>\n          <Button onClick={test2} block>\n                {/* For you to test the GET function to get workouts list */}\n                Test2\n          </Button>\n          <NavLink to=\"/register\">Sign Up Now </NavLink>\n        </Col>\n      </Container>\n    </div>\n  );\n}\n\nexport default Login\n","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/func/axiosApi.js",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/Dashboard.jsx",["124"],"import React, { useState } from 'react'\nimport { Row } from 'react-bootstrap'\nimport AthleteDash from './DashboardItems/AthleteDash'\nimport CoachDash from './DashboardItems/CoachDash'\n\nfunction Dashboard() {\n    /* GET USER TYPE FROM TOKEN ?????????????????????? */\n    const [userType, setUserType] = useState(\"Coach\")\n\n    return (\n        <Row>\n            {userType === \"Coach\" ?\n            <CoachDash />:\n            <AthleteDash />\n            }\n        </Row>\n    )\n}\n\nexport default Dashboard\n","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/InnerNaviBar.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteDash.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachDash.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/RecentlyCompleted.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/TodaysAgenda.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/PendingAthlete.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/PendingCoachReview.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthRecentlyCompleted.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthPendingResults.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthUpcoming.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthTodayAgenda.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/Workout/AddWorkOut.jsx",["125","126"],"import React, { useState, useEffect } from 'react'\nimport DatePicker from 'react-modern-calendar-datepicker';\nimport { Col, Row, Form, Button, DropdownButton, Dropdown, Container } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction WorkOut() {\n    const [athletes, setAthletes] = useState([])\n    const [date, setDate] = useState(null)\n    const [inputForm, setForm] = useState(\n        {\n            athletes: [],\n            workout_name: \"\",\n            sets: [\n                [\n                    {\n                        exercise: \"\",\n                        reps: \"\",\n                        rests: \"\",\n                        targets: \"\"\n                    }\n                ]\n            ]\n        })\n\n    function AddSet(i, item = [{\n        exercise: \"\",\n        reps: \"\",\n        rests: \"\",\n        targets: \"\"\n    }]) {\n        let temp = { ...inputForm }\n        temp.sets.splice(i, 0, item)\n\n        setForm(temp)\n    }\n\n    function RemoveSet(i) {\n        let obj = { ...inputForm };\n        obj.sets.splice(i, 1)\n        setForm(obj)\n    }\n\n    function AddInput(i, ii) {\n        let temp = { ...inputForm }\n        temp.sets[i].splice(ii, 0, {\n            exercise: \"\",\n            reps: \"\",\n            rests: \"\",\n            targets: \"\"\n        })\n        setForm(temp)\n    }\n\n    function RemoveInput(i, ii) {\n        let temp = { ...inputForm };\n        temp.sets[i].splice(ii, 1);\n        setForm(temp)\n    }\n\n    function ChangeHandler(e, i, ii) {\n        let { name, value } = e.target;\n        let temp = { ...inputForm };\n        if (name === \"athletes\") {\n            temp.athletes.push(value)\n        } else if (name === \"workout_name\") {\n            temp.workout_name = value\n        } else if (name !== \"athletes\") {\n            temp.sets[i][ii][name] = value\n        }\n\n        setForm(temp)\n    }\n\n    // =========================== TO UPDATE AXIOS ONCE API ROUTES FINALISED ================================\\\\\n    /**\n     * @POST = send data from INPUT FORM STATE TO DJANGO DB\n     * @reminder = to check data format, convert obj to array to send to back using another set state for submitworkout func\n     */\n    async function submitWorkout() {\n        let maxLength = 0;\n        inputForm.sets.forEach(set => {\n            if (set.length > maxLength) maxLength = set.length\n        })\n        console.log(maxLength)\n        let djangoFormVersion = {\n            athletes: inputForm.athletes,\n            workout_name: inputForm.workout_name,\n            workout_date: date,\n            exercises: [],\n            reps: [],\n            rests: [],\n            targets: [],\n        }\n        \n        inputForm.sets.forEach(set => {\n            let exerciseSet = []\n            let repSet = []\n            let restSet = []\n            let targetsSet = []\n            set.forEach(ex => {\n                exerciseSet.push(ex.exercise)\n                repSet.push(ex.reps)\n                restSet.push(ex.rest)\n                targetsSet.push(ex.targets)\n            })\n            if (exerciseSet.length < maxLength) {\n                for (let i = 0; i <= maxLength - exerciseSet.length; i++) {\n                    exerciseSet.push(\"\")\n                    repSet.push(\"\")\n                    restSet.push(\"\")\n                    targetsSet.push(\"\")\n                }\n            }\n            djangoFormVersion.exercises.push(exerciseSet)\n            djangoFormVersion.reps.push(repSet)\n            djangoFormVersion.rests.push(restSet)\n            djangoFormVersion.targets.push(targetsSet)\n        })\n\n        console.log(djangoFormVersion)\n        // try {\n        //     let response = await axios.post(\"http://localhost:8000/api/workouts\", inputForm, {\n        //         headers: {\n        //             'Authorization': \"JWT \" + localStorage.getItem('token'),\n        //             'Content-Type': 'application/json',\n        //             'accept': \"application/json\"\n        //         }\n        //     })\n        // } catch (error) {\n        //     return error\n        // }\n    }\n\n    /**\n     * @GET = retrieve Athlete data and populate in drop down list\n     */\n\n    async function getAthletes() {\n        try {\n            let response = await axios.get(process.env.REACT_APP_LOCALHOST + `/`);\n            setAthletes(response.data) // response.data? or smtg less, check it later\n        } catch (error) {\n            return error\n        }\n    }\n\n    useEffect(() => {\n        // getAthletes();\n        async function getData() {\n            try {\n                let response = await axios.get(\"http://localhost:8000/api/workouts\", {\n                    headers: {\n                        'Authorization': \"JWT \" + localStorage.getItem('token'),\n                        'Content-Type': 'application/json',\n                        'accept': \"application/json\"\n                    }\n                });\n            } catch (error) {\n                return error\n            }\n        }\n        getData();\n    }, [])\n\n    return (\n        <Container className=\"p-5\">\n            <Row className=\"mb-3\">\n                <Col>\n                    <h4>New Workout</h4>\n                </Col>\n            </Row>\n            <Row className=\"my-3\">\n                <Col md={12} className=\"outer_form\">\n                    <Form>\n                        <Row className=\"no-gutters\">\n                            <Col md={6} className=\"mr-4\">\n                                <Form.Control\n                                    name=\"workout_name\"\n                                    onChange={(e) => ChangeHandler(e)}\n                                    placeholder=\"Workout Name\"\n                                />\n                            </Col>\n                            <Col className=\"text-center\">\n                                <DatePicker\n                                    value={date}\n                                    onChange={setDate}\n                                    inputPlaceholder=\"Workout Day\"\n                                    shouldHighlightWeekends\n                                />\n                            </Col>\n                            <Col>\n                                <DropdownButton\n                                    id=\"dropdown-basic-button\"\n                                    variant=\"info\"\n                                    title=\"Athletes\"\n                                    className=\"d-flex justify-content-end\"\n                                    onChange={(e) => ChangeHandler(e)}\n                                >\n                                    <Dropdown.Item >\n                                        <Form.Group controlId=\"formBasicCheckbox\">\n                                            <Form.Check type=\"checkbox\" label=\"Select One\" name=\"athletes\" value={1} />\n                                        </Form.Group>\n                                    </Dropdown.Item>\n                                    {athletes.map((item, index) => (\n                                        <Dropdown.Item key={index} >\n                                            <Form.Group controlId=\"formBasicCheckbox\">\n                                                <Form.Check type=\"checkbox\" label={item} value={item} />\n                                            </Form.Group>\n                                        </Dropdown.Item>\n                                    ))}\n\n                                </DropdownButton>\n                            </Col>\n                        </Row>\n                        {/* ------------------- EACH SET ------------------- */}\n                        {inputForm.sets.map((item, index) => (\n                            <>\n                                <hr />\n                                <Form.Group className=\"my-5 form_set\" key={index}>\n                                    <Row className=\"no-gutters\">\n                                        <Col md=\"auto\">\n                                            <h4>SET {index + 1}</h4>\n                                        </Col>\n                                        <Col md=\"auto\" className=\"ml-5\">{inputForm.sets.length !== 1 &&\n                                            <Button className=\"px-3\" size='sm'\n                                                onClick={() => RemoveSet(index)}\n                                                variant=\"outline-danger\"> Remove Set </Button>}\n                                        </Col>\n                                    </Row>\n                                    {/* ------------------- EACH EXERCISE LINE ------------------- */}\n                                    {item.map((item2, index2) => (\n                                        <Row key={index2} className=\"my-2\">\n                                            <Col md=\"auto\">\n                                                {index2+1}:\n                                            </Col>\n                                            <Col md={4} >\n                                                <Form.Control\n                                                    name=\"exercise\"\n                                                    onChange={(e) => ChangeHandler(e, index, index2)}\n                                                    value={item2.exercise}\n                                                    placeholder=\"Exercise type\" />\n                                            </Col>\n                                            <Col>\n                                                <Form.Control\n                                                    name=\"reps\"\n                                                    onChange={(e) => ChangeHandler(e, index, index2)}\n                                                    value={item2.reps}\n                                                    placeholder=\"Reps\" />\n                                            </Col>\n                                            <Col>\n                                                <Form.Control\n                                                    name=\"rests\"\n                                                    onChange={(e) => ChangeHandler(e, index, index2)}\n                                                    value={item2.rests}\n                                                    placeholder=\"Rest\" />\n                                            </Col>\n                                            <Col>\n                                                <Form.Control\n                                                    name=\"targets\"\n                                                    onChange={(e) => ChangeHandler(e, index, index2)}\n                                                    value={item2.targets}\n                                                    placeholder=\"Target\" />\n                                            </Col>\n                                            {/* ------------------- Add and Remove Exercise Line Button ------------------- */}\n                                            <Col md={2}>\n                                                <Row>\n                                                    <Col>{inputForm.sets[index].length !== 1 &&\n                                                        <Button key={index} block className=\"mr10\"\n                                                            onClick={() => RemoveInput(index, index2)}\n                                                            variant=\"outline-danger\"> - </Button>}\n                                                    </Col>\n                                                    <Col>\n                                                        <Button\n                                                            key={index} block\n                                                            onClick={() => AddInput(index, index2)}\n                                                            variant=\"outline-secondary\"> + </Button>\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                        </Row>\n                                    ))}\n                                    {/* ------------------- Add and Repeat Set Button ------------------- */}\n                                    <Row className=\"my-4\">\n                                        <Col md={3} className=\"ml-auto\">\n                                            <Button block size='sm'\n                                                onClick={() => AddSet(index)}\n                                                variant=\"outline-secondary\"> Add Set </Button>\n                                        </Col>\n                                        <Col md={3}>\n                                            <Button block size='sm'\n                                                onClick={() => AddSet(index, item)}\n                                                variant=\"secondary\"> Repeat Set </Button>\n                                        </Col>\n                                    </Row>\n                                </Form.Group>\n                            </>\n                        ))}\n                    </Form>\n\n                    <Row >\n                        <Col md={12} className=\"d-flex flex-row-reverse\">\n                            <Button\n                                variant=\"warning\"\n                                type=\"submit\"\n                                onClick={submitWorkout}\n                            >Save Exercise</Button>\n                        </Col>\n                    </Row>\n                </Col>\n\n\n            </Row>\n        </Container>\n    )\n}\n\nexport default WorkOut\n","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/Workout/ViewWorkOut.jsx",["127","128","129","130"],"import React, { useState, useEffect, Fragment } from 'react'\nimport { Col, Row, Form, Button, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\n\n\n\nfunction ViewWorkOut() {\n    const [indexSet, setIndexSet] = useState(0)\n    const [newComments, setNewComments] = useState({})\n    /**\n     * @WORKOUT - updatethis this when api data obtained\n     */\n    const [workout, setWorkout] = useState(\n        [\n            {\n                set: \"1\",\n                data: [\n                    {\n                        exercise: \"Lunges\",\n                        reps: \"10\",\n                        rest: \"2\",\n                        target: \"10min\",\n                        result: \"\",\n                        comments: [{username: \"ABC\", comment: \"nice stuff there\"},{username: \"Coach A\", comment: \"good stuff there\"}]\n                    },                    \n                    {\n                        exercise: \"Burpees\",\n                        reps: \"10\",\n                        rest: \"2min\",\n                        target: \"12min\",\n                        result: \"\",\n                        comments: [{}]\n                    }\n                ]\n            },            \n            {\n                set: \"2\",\n                data: [\n                    {\n                        exercise: \"Swimming\",\n                        reps: \"2\",\n                        rest: \"2min\",\n                        target: \"250m\",\n                        result: \"\",\n                        comments: [{}]\n                    },                    \n                    {\n                        exercise: \"Sprinting\",\n                        reps: \"100m\",\n                        rest: \"1min\",\n                        target: \"30s\",\n                        result: \"\",\n                        comments: [{}]\n                    }\n                ]\n            }\n        ]\n    )\n    const [exerciseSelection, setExerciseSelection] = useState([])\n    \n    \n    function selectionHandler(e){\n        let {value} = e.target;\n        console.log(value)\n        setExerciseSelection(workout[Number(value)-1].data)\n    }\n    \n    function commentHandler(e){\n        let {name, value} = e.target;\n        setNewComments({...newComments, [name]: value})\n    }\n\n    console.log(indexSet)\n    console.log(exerciseSelection)\n    console.log(newComments)\n    //=========================AXIOS API TO BE UPDATED ================================\\\\\n\n    async function getWorkout() {\n        try {\n            let response = await axios.get(process.env.REACT_APP_LOCALHOST + `/`)\n            // setWorkout(response.data) to update once API confirmed\n        } catch (error) {\n            return error\n        }\n    }\n\n    useEffect(() => {\n        getWorkout();\n    }, [])\n\n    return (\n        <Fragment>\n            <Row className=\"\">\n                <Col md={12} className=\"border pt-3\">\n                    <h4>SETS</h4>\n                </Col>\n                <Col md={12} className=\"my-3 py-3 outer_form\">\n                    <Form>\n                        <Row className=\"no-gutters\">\n                            <Col md={10}></Col>\n                            <Col md={2} className=\"d-flex justify-content-center\">\n                            </Col>\n                        </Row>\n                        {workout.map((item, index) => (\n                            <Form.Group className=\"my-3 py-3 form_set\" key={index}>\n                                <Row className=\"no-gutters\">\n                                    <Col md={8} className=\"\">\n                                        <h4>SET {index + 1}</h4>\n                                    </Col>\n                                    <Col md={1} className=\"d-flex justify-content-center\" >\n                                    </Col>\n                                    <Col md={1} className=\"d-flex justify-content-center\">\n                                    </Col>\n                                    <Col md={2} className=\"d-flex justify-content-center\">\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col md={4} >\n                                        <Form.Label class=\"font-weight-bold\">Exercises</Form.Label>\n                                    </Col>\n                                    <Col md={2} >\n                                        <Form.Label class=\"font-weight-bold\">Reps</Form.Label>\n                                    </Col>\n                                    <Col md={2} >\n                                        <Form.Label class=\"font-weight-bold\">Rest</Form.Label>\n                                    </Col>\n                                    <Col md={2} >\n                                        <Form.Label class=\"font-weight-bold\">Target</Form.Label>\n                                    </Col>\n                                    <Col md={2} >\n                                        <Form.Label class=\"font-weight-bold\">Input Results</Form.Label>\n                                    </Col>\n                                </Row>\n\n\n                                {item.data.map((item2, index2) => (\n                                    \n                                    <Row key={index2} className=\"my-2\">\n                                        <Col md={4} className=\"d-flex align-items-center my-2\">\n                                            <div>\n                                                {item2.exercise}\n                                            </div>\n                                        </Col>\n                                        <Col md={2} className=\"d-flex align-items-center my-2\">\n                                            <div>\n                                                {item2.reps}\n                                            </div>\n\n                                        </Col>\n                                        <Col md={2} className=\"d-flex align-items-center my-2\">\n                                            <div>\n                                                {item2.rest}\n                                            </div>\n                                        </Col>\n                                        <Col md={2} className=\"d-flex align-items-center my-2\">\n                                            <div>\n                                                {item2.target}\n                                            </div>\n\n                                        </Col>\n                                        <Col md={2} className=\"d-flex align-items-center my-2\">\n                                            <Form.Control\n                                            name=\"results\"\n                                            // onChange={(e) => ChangeHandler(e,index, index2)}\n                                            placeholder=\"Results\"/>\n                                        </Col>\n                                        <Col md={12} className=\"d-flex align-items-center my-2 no-gutters\">\n                                           <Col md={12} className=\"border\">\n                                                {item2.comments.map((item3,index)=>(\n                                                    <div key={index}>\n                                                        {item3.username == null ? <text style={{fontWeight: 'bold'}}> No comments</text> : <p><text style={{fontWeight: 'bold'}}>{item3.username}</text><br/>{item3.comment}</p> }\n                                                    </div>\n                                                ))}\n                                           </Col>\n                                        </Col>\n                                    </Row>\n                                ))}\n\n                            </Form.Group>\n                        ))}\n                    </Form>\n\n                    <Row >\n                        <Col md={12} className=\"d-flex flex-row-reverse align-items-center my-3\">\n                            <Button>Add Results</Button>\n                        </Col>\n                        <Col md={6} className=\"d-flex flex-row align-items-center my-2\">\n                            <h4>Enter Workout Comments</h4>\n                        </Col>\n                        <Col md={3} className=\"d-flex flex-row align-items-center my-2\">\n                            <Form>\n                                <Form.Group as={Col} controlId=\"formGridState\">\n                                    <Form.Label>SET</Form.Label>\n                                    <Form.Control \n                                    as=\"select\" \n                                    defaultValue=\"Choose...\"\n                                    onChange={(e)=>{\n                                        commentHandler(e);\n                                        selectionHandler(e)\n                                    }} \n                                    name=\"set\"\n                                    >\n                                    {workout.map((item,index)=>(\n                                            <option\n                                            key={index} \n                                            value={item.set}                                   \n                                            >SET {item.set}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col md={3} className=\"d-flex flex-row align-items-center my-2\">\n                        <Form>\n                            <Form.Group as={Col} controlId=\"formGridState\">\n                                    <Form.Label>Exercise</Form.Label>\n                                    <Form.Control \n                                    as=\"select\" \n                                    defaultValue=\"Choose...\"\n                                    onChange={(e)=>commentHandler(e)} \n                                    name=\"exercise\"\n                                    >\n                                    {exerciseSelection.map((item,index)=>(\n                                            <option\n                                            key={index} \n                                            onClick={()=>setIndexSet(index)} \n                                            value={item.set}                                   \n                                            >Exercise {item.exercise}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                                                    \n                        <Col md={12} className=\"my-2\">\n                            <Form.Control \n                            as=\"textarea\" \n                            rows={3} \n                            name=\"comment\"\n                            onChange={(e)=>commentHandler(e)}\n                            />\n                        </Col>\n                    </Row>\n                </Col>\n\n\n            </Row>\n        </Fragment>\n    )\n}\n\nexport default ViewWorkOut\n","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/AthleteProfile.jsx",["131"],"import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Col, Row } from 'react-bootstrap'\nimport { axiosInstance } from '../../../func/axiosApi'\n\nfunction AthleteProfile() {\n    let { id } = useParams()\n    const [profile, setProfile] = useState({\n        found: false,\n        valid: false,\n        profile: {}\n    })\n\n    useEffect(() => {\n        async function getProfile() {\n            try {\n                let temp = await axiosInstance(`profile/${id}`)\n                console.log(temp.data)\n                setProfile(temp.data)\n            } catch (e) {\n                setProfile(e.response.data)\n            }\n        }\n        getProfile()\n    }, [])\n\n    return (\n        <div className=\"p-5\">\n            {profile.found ?\n                <>\n                    {profile.valid ?\n                        <>\n                            <h1 className=\"mb-3 display-4\">{profile.profile.name.trim() ? profile.profile.name: profile.profile.username }</h1>\n                            <div className=\"my-3\">\n                                <Row>\n                                    <Col>\n                                        <div className=\"h5 my-2\"><u>Club</u></div>\n                                        <div>{profile.profile.club}</div>\n                                        <div className=\"h5 my-2\"><u>Gender</u></div>\n                                        <div>{profile.profile.gender}</div>\n                                        <div className=\"h5 my-2\"><u>Age</u></div>\n                                        <div>{profile.profile.age}</div>\n                                        <div className=\"h5 my-2\"><u>Location</u></div>\n                                        <div>{profile.profile.location}</div>\n                                    </Col>\n                                    <Col>\n                                        Photo\n                                </Col>\n                                </Row>\n                                <hr className=\"my-4\"/>\n                                <Row className=\"my-3\">\n                                    <Col>\n                                        <h3 className=\"display-4 mb-5\">Recent Workouts</h3>\n                                        {profile.profile.public ?\n                                        <>\n                                            {profile.profile.recent_workouts.map(wkout=>(\n                                                <>\n                                                <h5>{wkout.workout_date}</h5>\n                                                <div>\n                                                    {wkout.workout_name}\n                                                </div>\n                                                </>\n                                            ))}\n                                        </>:\n                                        <>\n                                            Workouts have been set to private\n                                        </>\n                                    }\n                                    </Col>\n                                    <Col className=\"d-flex align-items-center\">\n                                        <div>\n                                            <div>\n                                                View workout calendar\n                                            </div>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </> :\n                        <>\n                            <h1 className=\"my-3 display-4\">Oops, no such user</h1>\n                        </>\n                    }\n                </> :\n                <>\n                    <h1 className=\"my-3 display-4\">Loading...</h1>\n                </>\n            }\n        </div>\n    )\n}\n\n\n\nexport default AthleteProfile\n","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/ViewClub.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/Calendar/CalendarDisplay.jsx",["132","133","134","135","136"],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/Calendar/DisplayMonth.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/Calendar/DisplayWeek.jsx",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":20},{"ruleId":"141","severity":1,"message":"145","line":52,"column":11,"nodeType":"143","messageId":"144","endLine":52,"endColumn":15},{"ruleId":"141","severity":1,"message":"146","line":8,"column":22,"nodeType":"143","messageId":"144","endLine":8,"endColumn":33},{"ruleId":"141","severity":1,"message":"147","line":138,"column":20,"nodeType":"143","messageId":"144","endLine":138,"endColumn":31},{"ruleId":"141","severity":1,"message":"148","line":151,"column":21,"nodeType":"143","messageId":"144","endLine":151,"endColumn":29},{"ruleId":"141","severity":1,"message":"149","line":2,"column":34,"nodeType":"143","messageId":"144","endLine":2,"endColumn":48},{"ruleId":"141","severity":1,"message":"150","line":2,"column":50,"nodeType":"143","messageId":"144","endLine":2,"endColumn":58},{"ruleId":"141","severity":1,"message":"151","line":13,"column":21,"nodeType":"143","messageId":"144","endLine":13,"endColumn":31},{"ruleId":"141","severity":1,"message":"148","line":80,"column":17,"nodeType":"143","messageId":"144","endLine":80,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":25,"column":8,"nodeType":"154","endLine":25,"endColumn":10,"suggestions":"155"},{"ruleId":"141","severity":1,"message":"156","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":13},{"ruleId":"141","severity":1,"message":"157","line":2,"column":15,"nodeType":"143","messageId":"144","endLine":2,"endColumn":18},{"ruleId":"141","severity":1,"message":"158","line":11,"column":12,"nodeType":"143","messageId":"144","endLine":11,"endColumn":20},{"ruleId":"141","severity":1,"message":"159","line":11,"column":22,"nodeType":"143","messageId":"144","endLine":11,"endColumn":33},{"ruleId":"152","severity":1,"message":"160","line":52,"column":8,"nodeType":"154","endLine":52,"endColumn":24,"suggestions":"161"},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'InnerNaviBar' is defined but never used.","Identifier","unusedVar","'resp' is assigned a value but never used.","'setUserType' is assigned a value but never used.","'getAthletes' is defined but never used.","'response' is assigned a value but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'setWorkout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["164"],"'Col' is defined but never used.","'Row' is defined but never used.","'workouts' is assigned a value but never used.","'setWorkouts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'calendar'. Either include it or remove the dependency array. You can also do a functional update 'setCalendar(c => ...)' if you only need 'calendar' in the 'setCalendar' call.",["165"],"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [id]",{"range":"170","text":"171"},"Update the dependencies array to be: [calendar, calendar.today]",{"range":"172","text":"173"},[710,712],"[id]",[1708,1724],"[calendar, calendar.today]"]