[{"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/index.js":"1","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/reportWebVitals.js":"2","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/App.js":"3","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/AllRoutes.jsx":"4","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/LandingPage/LandingPage.jsx":"5","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/BetterAthletes.jsx":"6","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Auth/Login.jsx":"7","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Auth/Register.jsx":"8","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/AddWorkOut.jsx":"9","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/func/axiosApi.js":"10","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/InnerNaviBar.jsx":"11","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/ViewWorkOut.jsx":"12","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/Dashboard.jsx":"13","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachDash.jsx":"14","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteDash.jsx":"15","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthPendingResults.jsx":"16","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthRecentlyCompleted.jsx":"17","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthTodayAgenda.jsx":"18","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthUpcoming.jsx":"19","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/RecentlyCompleted.jsx":"20","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/PendingCoachReview.jsx":"21","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/TodaysAgenda.jsx":"22","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/PendingAthlete.jsx":"23"},{"size":666,"mtime":1607925500753,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1607670190982,"results":"26","hashOfConfig":"25"},{"size":217,"mtime":1607922456284,"results":"27","hashOfConfig":"25"},{"size":1367,"mtime":1607941495321,"results":"28","hashOfConfig":"25"},{"size":2407,"mtime":1607842868485,"results":"29","hashOfConfig":"25"},{"size":1370,"mtime":1607940194180,"results":"30","hashOfConfig":"25"},{"size":2285,"mtime":1607940429755,"results":"31","hashOfConfig":"25"},{"size":6263,"mtime":1607941744358,"results":"32","hashOfConfig":"25"},{"size":14913,"mtime":1607925526909,"results":"33","hashOfConfig":"25"},{"size":304,"mtime":1607925348353,"results":"34","hashOfConfig":"25"},{"size":2151,"mtime":1607941952220,"results":"35","hashOfConfig":"25"},{"size":11352,"mtime":1607922456299,"results":"36","hashOfConfig":"25"},{"size":1369,"mtime":1607941924148,"results":"37","hashOfConfig":"25"},{"size":3819,"mtime":1607935850021,"results":"38","hashOfConfig":"25"},{"size":3814,"mtime":1607935843430,"results":"39","hashOfConfig":"25"},{"size":731,"mtime":1607922456295,"results":"40","hashOfConfig":"25"},{"size":936,"mtime":1607922456296,"results":"41","hashOfConfig":"25"},{"size":721,"mtime":1607922456296,"results":"42","hashOfConfig":"25"},{"size":723,"mtime":1607922456297,"results":"43","hashOfConfig":"25"},{"size":732,"mtime":1607922456298,"results":"44","hashOfConfig":"25"},{"size":737,"mtime":1607922456298,"results":"45","hashOfConfig":"25"},{"size":721,"mtime":1607922456298,"results":"46","hashOfConfig":"25"},{"size":738,"mtime":1607922456298,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"106sfak",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/index.js",["98"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport DatePicker from 'react-modern-calendar-datepicker';\nimport 'react-modern-calendar-datepicker/lib/DatePicker.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["99","100"],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/reportWebVitals.js",[],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/App.js",[],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/AllRoutes.jsx",[],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/LandingPage/LandingPage.jsx",[],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/BetterAthletes.jsx",[],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Auth/Login.jsx",["101","102"],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Auth/Register.jsx",["103"],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/AddWorkOut.jsx",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120"],"import React, { useState, useEffect } from 'react'\nimport DatePicker from 'react-modern-calendar-datepicker';\nimport { Fragment } from 'react'\nimport { Col, Row, Form, Button, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction WorkOut() {\n    const [athletes, setAthletes] = useState([])\n    const [date, setDate] = useState(null)\n    const [exer, setExer] = useState([])\n    const [inputForm, setForm] = useState(\n        {\n            athletes: [],\n            workout_name: \"\",\n            workout_date:{},\n            sets: [\n                    {\n                        set: \"\",\n                        data: [\n                                {   \n                                    exercise: \"\",\n                                    reps: \"\",\n                                    rests: \"\",\n                                    targets: \"\"\n                                }\n                        ]   \n                    }\n                ]\n        })\n    \n    const [djangoData, setDjangoData] = useState(\n        {\n            athletes: [],\n            workout_name:\"\",\n            exercise: [[]],\n            reps: [],\n            targets: [],\n            rests: [],\n        }\n    )\n    \n    function AddSet(){\n        let new_form = {...inputForm}\n        new_form.sets.push({\n                set: \"\",\n                data: [\n                    {\n                        exercise: \"\",\n                        reps: \"\",\n                        rests: \"\",\n                        targets: \"\"\n                    }\n                ]\n            })\n        setForm(new_form)\n    }\n\n    function RemoveSet(i){\n        let obj = {...inputForm};\n        obj.sets.splice(i,1)\n        setForm(obj)\n    }\n\n    function AddInput(i) {\n        let input = {...inputForm}\n        let new_form = input.sets[i].data\n        new_form.push({\n            exercise: \"\",\n            reps: \"\",\n            rests: \"\",\n            targets: \"\"\n        })\n        setForm(input)\n    }\n\n    function RemoveInput(i, ii) {\n        let input = {...inputForm};\n        let list_data = input.sets[i].data;\n        list_data.splice(ii, 1);\n        setForm(input)\n    }\n\n    function repeatSet(i) {\n        let repeat_set = {...inputForm};\n        let new_obj = {\n            set: repeat_set.sets[i].set + 1,\n            data: repeat_set.sets[i].data\n        }\n        repeat_set.sets.push(new_obj)\n        setForm(repeat_set)\n\n    }\n\n    function ChangeHandler(e, i, ii) {\n        let { name, value } = e.target;\n        let form_data = {...inputForm};\n\n        if (name === \"athletes\"){\n            form_data.athletes.push(value)\n        } else if (name !== \"athletes\"){\n            form_data.sets[i].set = i+1;\n            form_data.sets[i].data[ii][name] = value;\n            form_data.workout_date = date;\n        }\n        \n        setForm(form_data)\n        djangoHandler(e,i,ii);\n    }\n\n    let newArr = []\n\n    // let obj = {\n    //     xxx: [],\n    //     sdasda\n    // }\n\n    function djangoHandler(e,i,ii){\n        let { name, value } = e.target;\n        let django_data = {...djangoData};\n        \n        if (name == \"athletes\"){\n            django_data.athletes.push(value)\n        } else if (name == \"workout_name\"){\n            django_data.workout_name = value\n        } else if (name == \"exercise\"){\n            \n            django_data.exercise[i][ii] = value\n        }\n        setDjangoData(django_data)\n        console.log(djangoData)\n        // [[[]],[[[]]]]\n    }\n    // console.log(newArr)\n\n    // console.log(inputForm)\n    // exercise: [],\n    //         reps: [],\n    //         targets: [],\n    //         rests: []\n\n    function djangoConversion(){\n        let exercise_arr = new Array(inputForm.sets.length).fill([])\n        let reps_arr = new Array(inputForm.sets.length).fill([])\n        let targets_arr = new Array(inputForm.sets.length).fill([])\n        let rests_arr = new Array(inputForm.sets.length).fill([])\n        let count = 0;\n        let data = inputForm.sets;\n        let arr = []\n        let merged = [].concat(arr)\n\n        // console.log(length_of_arr)\n        // // data.forEach((item,index)=>{\n        // //     arr.push(item.data[index].exercise)\n        // // })\n        // console.log(arr)\n        // console.log(merged)\n        // item.data.forEach((item2,index2)=>{\n        //     console.log(count)\n        //     if (item2[\"exercise\"]){\n        //         exercise_arr[count].push(item2[\"exercise\"])\n        //     } else if (item2[\"reps\"] && index == index2){\n        //         reps_arr[index].push(item2[\"reps\"])\n        //     } else if (item2[\"targets\"] && index == index2){\n        //         targets_arr[index].push(item2[\"targets\"])\n        //     } else if (item2[\"rests\"] && index == index2){\n        //         rests_arr[index].push(item2[\"rests\"])\n        //     }\n            \n        // })\n        // count += 1\n        // console.log(count)\n    }\n    // djangoConversion();\n\n\n\n\n    // console.log(inputForm)\n\n\n\n    // =========================== TO UPDATE AXIOS ONCE API ROUTES FINALISED ================================\\\\\n    /**\n     * @POST = send data from INPUT FORM STATE TO DJANGO DB\n     * @reminder = to check data format, convert obj to array to send to back using another set state for submitworkout func\n     */\n    async function submitWorkout(){\n        try {\n            let response = await axios.post(\"http://localhost:8000/api/workouts\",inputForm, {\n                headers: {\n                    'Authorization': \"JWT \" + localStorage.getItem('token'),\n                    'Content-Type': 'application/json',\n                    'accept': \"application/json\"\n                }\n            })\n        } catch (error) {\n            return error\n        }\n    }\n\n    /**\n     * @GET = retrieve Athlete data and populate in drop down list\n     */\n\n    async function getAthletes(){\n        try {\n            let response = await axios.get(process.env.REACT_APP_LOCALHOST+ `/`);\n            setAthletes(response.data) // response.data? or smtg less, check it later\n        }catch(error){\n            return error\n        }\n    }\n\n    async function getData(){\n        try {\n            let response = await axios.get(\"http://localhost:8000/api/workouts\", {\n                headers: {\n                    'Authorization': \"JWT \" + localStorage.getItem('token'),\n                    'Content-Type': 'application/json',\n                    'accept': \"application/json\"\n                }\n            });\n        } catch (error) {\n            return error\n        }\n    }\n\n    useEffect(() => {\n        // getAthletes();\n        getData();\n    }, [])\n\n    return (\n        <Fragment>\n            <Row className=\"\">\n                <Col md={12} className=\"border pt-3\">\n                    <h4>SETS</h4>\n                </Col>\n                <Col md={12} className=\"my-3 py-3 outer_form\">\n                <Form>\n                    <Row className=\"no-gutters\">\n                        <Col md={3}>\n                        <Form.Control\n                            name=\"workout_name\"\n                            onChange={(e) => ChangeHandler(e)}\n                            placeholder=\"Designate a workout name\" \n                            />\n                        </Col>\n                        <Col md={1}>\n\n                        </Col>\n                        <Col md={3}>\n                        <DatePicker\n                            value={date}\n                            onChange={setDate}\n                            inputPlaceholder=\"Select a day\"\n                            shouldHighlightWeekends\n                            />\n                        </Col>\n                        <Col md={3}>\n\n                        </Col>\n                        <Col md={2} className=\"d-flex justify-content-center\">\n\n\n                            <DropdownButton \n                            id=\"dropdown-basic-button\" \n                            variant=\"info\" \n                            title=\"Athletes\" \n                            className=\"d-flex justify-content-end\"\n                            onChange={(e)=>ChangeHandler(e)}\n                            >\n                                <Dropdown.Item >\n                                    <Form.Group controlId=\"formBasicCheckbox\">\n                                        <Form.Check type=\"checkbox\" label=\"Select One\" name=\"athletes\" value={1}/>\n                                    </Form.Group>\n                                </Dropdown.Item>\n                                {athletes.map((item,index)=>(\n                                    <Dropdown.Item key={index} >\n                                        <Form.Group controlId=\"formBasicCheckbox\">\n                                            <Form.Check type=\"checkbox\" label={item} value={item}/>\n                                        </Form.Group>\n                                    </Dropdown.Item>\n                                ))}\n\n                            </DropdownButton>\n                        </Col>\n                    </Row>\n                    {inputForm.sets.map((item, index) => (\n                        <Form.Group className=\"my-3 py-3 form_set\" key={index}>\n                            <Row className=\"no-gutters\">\n                                <Col md={8} className=\"\">\n                                    <h4>SET {index + 1}</h4>\n                                </Col>\n                                <Col md={1} className=\"d-flex justify-content-center\" >{inputForm.sets.length !== 1 &&\n                                    <Button className=\"px-3\"\n                                        onClick={() => RemoveSet(index)}\n                                        variant=\"outline-danger\"> - </Button>}\n                                </Col>\n                                <Col md={1} className=\"d-flex justify-content-center\">\n                                    {inputForm.sets.length - 1 === index &&\n                                        <Button\n                                            onClick={AddSet}\n                                            variant=\"outline-secondary\"> + </Button>}\n                                </Col>\n                                <Col md={2} className=\"d-flex justify-content-center\">\n                                        <Button\n                                            onClick={()=>repeatSet(index)}\n                                            variant=\"secondary\"> Repeat Set </Button>\n                                </Col>\n                            </Row>\n                            <Row>\n                            \n                                <Col md={4} >\n                                    <Form.Label>Exercise</Form.Label>\n                                </Col>\n                                <Col md={2} >\n                                    <Form.Label>Reps</Form.Label>\n                                </Col>\n                                <Col md={2} >\n                                    <Form.Label>Rest</Form.Label>\n                                </Col>\n                                <Col md={2} >\n                                    <Form.Label>Target</Form.Label>\n                                </Col>\n                            </Row>\n\n\n                            {inputForm.sets[index].data.map((item2, index2) => (\n\n                                <Row key={index2} className=\"my-2\">\n                                    <Col md={4} >\n                                        <Form.Control\n                                            name=\"exercise\"\n                                            onChange={(e) => ChangeHandler(e,index, index2)}\n                                            value={item2.exercise}\n                                            placeholder=\"Exercise type\" />\n                                    </Col>\n                                    <Col md={2} >\n                                        <Form.Control\n                                            name=\"reps\"\n                                            onChange={(e) => ChangeHandler(e,index, index2)}\n                                            value={item2.reps}\n                                            placeholder=\"Reps\" />\n                                    </Col>\n                                    <Col md={2}>\n                                        <Form.Control\n                                            name=\"rests\"\n                                            onChange={(e) => ChangeHandler(e,index, index2)}\n                                            value={item2.rests}\n                                            placeholder=\"Rest\" />\n                                    </Col>\n                                    <Col md={2}>\n                                        <Form.Control\n                                            name=\"targets\"\n                                            onChange={(e) => ChangeHandler(e,index, index2)}\n                                            value={item2.targets}\n                                            placeholder=\"Target\" />\n                                    </Col>\n                                    <Col md={2}>\n                                        <Row>\n                                            <Col>{inputForm.sets[index].data.length !== 1 &&\n                                                <Button key={index} className=\"mr10\"\n                                                    onClick={() => RemoveInput(index, index2)}\n                                                    variant=\"outline-danger\"> - </Button>}\n                                            </Col>\n                                            <Col>\n                                                {inputForm.sets[index].data.length - 1 === index2 &&\n                                                    <Button\n                                                        key={index}\n                                                        onClick={()=>AddInput(index)}\n                                                        variant=\"outline-secondary\"> + </Button>}\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            ))}\n\n                        </Form.Group>\n                    ))}\n                    </Form>\n\n                    <Row >\n                        <Col md={12} className=\"d-flex flex-row-reverse\">\n                            <Button \n                            variant=\"warning\" \n                            type=\"submit\"\n                            onClick={submitWorkout}\n                            >Save Exercise</Button>\n                        </Col>\n                    </Row>\n                </Col>\n\n\n            </Row>\n        </Fragment>\n    )\n}\n\nexport default WorkOut\n","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/func/axiosApi.js",[],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/InnerNaviBar.jsx",[],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/ViewWorkOut.jsx",["121","122","123","124"],"import React, { useState, useEffect, Fragment } from 'react'\nimport { Col, Row, Form, Button, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\n\n\n\nfunction ViewWorkOut() {\n    const [indexSet, setIndexSet] = useState(0)\n    const [newComments, setNewComments] = useState({})\n    /**\n     * @WORKOUT - updatethis this when api data obtained\n     */\n    const [workout, setWorkout] = useState(\n        [\n            {\n                set: \"1\",\n                data: [\n                    {\n                        exercise: \"Lunges\",\n                        reps: \"10\",\n                        rest: \"2\",\n                        target: \"10min\",\n                        result: \"\",\n                        comments: [{username: \"ABC\", comment: \"nice stuff there\"},{username: \"Coach A\", comment: \"good stuff there\"}]\n                    },                    \n                    {\n                        exercise: \"Burpees\",\n                        reps: \"10\",\n                        rest: \"2min\",\n                        target: \"12min\",\n                        result: \"\",\n                        comments: [{}]\n                    }\n                ]\n            },            \n            {\n                set: \"2\",\n                data: [\n                    {\n                        exercise: \"Swimming\",\n                        reps: \"2\",\n                        rest: \"2min\",\n                        target: \"250m\",\n                        result: \"\",\n                        comments: [{}]\n                    },                    \n                    {\n                        exercise: \"Sprinting\",\n                        reps: \"100m\",\n                        rest: \"1min\",\n                        target: \"30s\",\n                        result: \"\",\n                        comments: [{}]\n                    }\n                ]\n            }\n        ]\n    )\n    const [exerciseSelection, setExerciseSelection] = useState([])\n    \n    \n    function selectionHandler(e){\n        let {value} = e.target;\n        console.log(value)\n        setExerciseSelection(workout[Number(value)-1].data)\n    }\n    \n    function commentHandler(e){\n        let {name, value} = e.target;\n        setNewComments({...newComments, [name]: value})\n    }\n\n    console.log(indexSet)\n    console.log(exerciseSelection)\n    console.log(newComments)\n    //=========================AXIOS API TO BE UPDATED ================================\\\\\n\n    async function getWorkout() {\n        try {\n            let response = await axios.get(process.env.REACT_APP_LOCALHOST + `/`)\n            // setWorkout(response.data) to update once API confirmed\n        } catch (error) {\n            return error\n        }\n    }\n\n    useEffect(() => {\n        getWorkout();\n    }, [])\n\n    return (\n        <Fragment>\n            <Row className=\"\">\n                <Col md={12} className=\"border pt-3\">\n                    <h4>SETS</h4>\n                </Col>\n                <Col md={12} className=\"my-3 py-3 outer_form\">\n                    <Form>\n                        <Row className=\"no-gutters\">\n                            <Col md={10}></Col>\n                            <Col md={2} className=\"d-flex justify-content-center\">\n                            </Col>\n                        </Row>\n                        {workout.map((item, index) => (\n                            <Form.Group className=\"my-3 py-3 form_set\" key={index}>\n                                <Row className=\"no-gutters\">\n                                    <Col md={8} className=\"\">\n                                        <h4>SET {index + 1}</h4>\n                                    </Col>\n                                    <Col md={1} className=\"d-flex justify-content-center\" >\n                                    </Col>\n                                    <Col md={1} className=\"d-flex justify-content-center\">\n                                    </Col>\n                                    <Col md={2} className=\"d-flex justify-content-center\">\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col md={4} >\n                                        <Form.Label class=\"font-weight-bold\">Exercises</Form.Label>\n                                    </Col>\n                                    <Col md={2} >\n                                        <Form.Label class=\"font-weight-bold\">Reps</Form.Label>\n                                    </Col>\n                                    <Col md={2} >\n                                        <Form.Label class=\"font-weight-bold\">Rest</Form.Label>\n                                    </Col>\n                                    <Col md={2} >\n                                        <Form.Label class=\"font-weight-bold\">Target</Form.Label>\n                                    </Col>\n                                    <Col md={2} >\n                                        <Form.Label class=\"font-weight-bold\">Input Results</Form.Label>\n                                    </Col>\n                                </Row>\n\n\n                                {item.data.map((item2, index2) => (\n                                    \n                                    <Row key={index2} className=\"my-2\">\n                                        <Col md={4} className=\"d-flex align-items-center my-2\">\n                                            <div>\n                                                {item2.exercise}\n                                            </div>\n                                        </Col>\n                                        <Col md={2} className=\"d-flex align-items-center my-2\">\n                                            <div>\n                                                {item2.reps}\n                                            </div>\n\n                                        </Col>\n                                        <Col md={2} className=\"d-flex align-items-center my-2\">\n                                            <div>\n                                                {item2.rest}\n                                            </div>\n                                        </Col>\n                                        <Col md={2} className=\"d-flex align-items-center my-2\">\n                                            <div>\n                                                {item2.target}\n                                            </div>\n\n                                        </Col>\n                                        <Col md={2} className=\"d-flex align-items-center my-2\">\n                                            <Form.Control\n                                            name=\"results\"\n                                            // onChange={(e) => ChangeHandler(e,index, index2)}\n                                            placeholder=\"Results\"/>\n                                        </Col>\n                                        <Col md={12} className=\"d-flex align-items-center my-2 no-gutters\">\n                                           <Col md={12} className=\"border\">\n                                                {item2.comments.map((item3,index)=>(\n                                                    <div key={index}>\n                                                        {item3.username == null ? <text style={{fontWeight: 'bold'}}> No comments</text> : <p><text style={{fontWeight: 'bold'}}>{item3.username}</text><br/>{item3.comment}</p> }\n                                                    </div>\n                                                ))}\n                                           </Col>\n                                        </Col>\n                                    </Row>\n                                ))}\n\n                            </Form.Group>\n                        ))}\n                    </Form>\n\n                    <Row >\n                        <Col md={12} className=\"d-flex flex-row-reverse align-items-center my-3\">\n                            <Button>Add Results</Button>\n                        </Col>\n                        <Col md={6} className=\"d-flex flex-row align-items-center my-2\">\n                            <h4>Enter Workout Comments</h4>\n                        </Col>\n                        <Col md={3} className=\"d-flex flex-row align-items-center my-2\">\n                            <Form>\n                                <Form.Group as={Col} controlId=\"formGridState\">\n                                    <Form.Label>SET</Form.Label>\n                                    <Form.Control \n                                    as=\"select\" \n                                    defaultValue=\"Choose...\"\n                                    onChange={(e)=>{\n                                        commentHandler(e);\n                                        selectionHandler(e)\n                                    }} \n                                    name=\"set\"\n                                    >\n                                    {workout.map((item,index)=>(\n                                            <option\n                                            key={index} \n                                            value={item.set}                                   \n                                            >SET {item.set}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col md={3} className=\"d-flex flex-row align-items-center my-2\">\n                        <Form>\n                            <Form.Group as={Col} controlId=\"formGridState\">\n                                    <Form.Label>Exercise</Form.Label>\n                                    <Form.Control \n                                    as=\"select\" \n                                    defaultValue=\"Choose...\"\n                                    onChange={(e)=>commentHandler(e)} \n                                    name=\"exercise\"\n                                    >\n                                    {exerciseSelection.map((item,index)=>(\n                                            <option\n                                            key={index} \n                                            onClick={()=>setIndexSet(index)} \n                                            value={item.set}                                   \n                                            >Exercise {item.exercise}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                                                    \n                        <Col md={12} className=\"my-2\">\n                            <Form.Control \n                            as=\"textarea\" \n                            rows={3} \n                            name=\"comment\"\n                            onChange={(e)=>commentHandler(e)}\n                            />\n                        </Col>\n                    </Row>\n                </Col>\n\n\n            </Row>\n        </Fragment>\n    )\n}\n\nexport default ViewWorkOut\n","/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/Dashboard.jsx",["125","126","127","128"],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachDash.jsx",[],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteDash.jsx",[],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthPendingResults.jsx",[],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthRecentlyCompleted.jsx",[],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthTodayAgenda.jsx",[],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthUpcoming.jsx",[],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/RecentlyCompleted.jsx",[],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/PendingCoachReview.jsx",[],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/TodaysAgenda.jsx",[],"/Users/wongkinken/Documents/sei-25/projects/Better-Athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/PendingAthlete.jsx",[],{"ruleId":"129","severity":1,"message":"130","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":18},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"129","severity":1,"message":"137","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":20},{"ruleId":"138","severity":1,"message":"139","line":14,"column":6,"nodeType":"140","endLine":14,"endColumn":8,"suggestions":"141"},{"ruleId":"129","severity":1,"message":"142","line":2,"column":19,"nodeType":"131","messageId":"132","endLine":2,"endColumn":27},{"ruleId":"129","severity":1,"message":"143","line":10,"column":12,"nodeType":"131","messageId":"132","endLine":10,"endColumn":16},{"ruleId":"129","severity":1,"message":"144","line":10,"column":18,"nodeType":"131","messageId":"132","endLine":10,"endColumn":25},{"ruleId":"129","severity":1,"message":"145","line":110,"column":9,"nodeType":"131","messageId":"132","endLine":110,"endColumn":15},{"ruleId":"146","severity":1,"message":"147","line":121,"column":18,"nodeType":"148","messageId":"149","endLine":121,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":123,"column":25,"nodeType":"148","messageId":"149","endLine":123,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":125,"column":25,"nodeType":"148","messageId":"149","endLine":125,"endColumn":27},{"ruleId":"129","severity":1,"message":"150","line":141,"column":14,"nodeType":"131","messageId":"132","endLine":141,"endColumn":30},{"ruleId":"129","severity":1,"message":"151","line":142,"column":13,"nodeType":"131","messageId":"132","endLine":142,"endColumn":25},{"ruleId":"129","severity":1,"message":"152","line":143,"column":13,"nodeType":"131","messageId":"132","endLine":143,"endColumn":21},{"ruleId":"129","severity":1,"message":"153","line":144,"column":13,"nodeType":"131","messageId":"132","endLine":144,"endColumn":24},{"ruleId":"129","severity":1,"message":"154","line":145,"column":13,"nodeType":"131","messageId":"132","endLine":145,"endColumn":22},{"ruleId":"129","severity":1,"message":"155","line":146,"column":13,"nodeType":"131","messageId":"132","endLine":146,"endColumn":18},{"ruleId":"129","severity":1,"message":"156","line":147,"column":13,"nodeType":"131","messageId":"132","endLine":147,"endColumn":17},{"ruleId":"129","severity":1,"message":"157","line":149,"column":13,"nodeType":"131","messageId":"132","endLine":149,"endColumn":19},{"ruleId":"129","severity":1,"message":"158","line":189,"column":17,"nodeType":"131","messageId":"132","endLine":189,"endColumn":25},{"ruleId":"129","severity":1,"message":"159","line":205,"column":20,"nodeType":"131","messageId":"132","endLine":205,"endColumn":31},{"ruleId":"129","severity":1,"message":"158","line":216,"column":17,"nodeType":"131","messageId":"132","endLine":216,"endColumn":25},{"ruleId":"129","severity":1,"message":"160","line":2,"column":34,"nodeType":"131","messageId":"132","endLine":2,"endColumn":48},{"ruleId":"129","severity":1,"message":"161","line":2,"column":50,"nodeType":"131","messageId":"132","endLine":2,"endColumn":58},{"ruleId":"129","severity":1,"message":"162","line":13,"column":21,"nodeType":"131","messageId":"132","endLine":13,"endColumn":31},{"ruleId":"129","severity":1,"message":"158","line":80,"column":17,"nodeType":"131","messageId":"132","endLine":80,"endColumn":25},{"ruleId":"129","severity":1,"message":"163","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"142","line":7,"column":10,"nodeType":"131","messageId":"132","endLine":7,"endColumn":18},{"ruleId":"129","severity":1,"message":"164","line":8,"column":8,"nodeType":"131","messageId":"132","endLine":8,"endColumn":13},{"ruleId":"138","severity":1,"message":"165","line":14,"column":8,"nodeType":"140","endLine":14,"endColumn":10,"suggestions":"166"},"no-unused-vars","'DatePicker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["167"],"no-negated-in-lhs",["168"],"'InnerNaviBar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'check'. Either include it or remove the dependency array.","ArrayExpression",["169"],"'Redirect' is defined but never used.","'exer' is assigned a value but never used.","'setExer' is assigned a value but never used.","'newArr' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'djangoConversion' is defined but never used.","'exercise_arr' is assigned a value but never used.","'reps_arr' is assigned a value but never used.","'targets_arr' is assigned a value but never used.","'rests_arr' is assigned a value but never used.","'count' is assigned a value but never used.","'data' is assigned a value but never used.","'merged' is assigned a value but never used.","'response' is assigned a value but never used.","'getAthletes' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'setWorkout' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'verifyToken'. Either include it or remove the dependency array.",["170"],"no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [check]",{"range":"175","text":"176"},"Update the dependencies array to be: [verifyToken]",{"range":"177","text":"178"},[410,412],"[check]",[474,476],"[verifyToken]"]