[{"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/index.js":"1","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/reportWebVitals.js":"2","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/App.js":"3","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/BetterAthletes.jsx":"4","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/AllRoutes.jsx":"5","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/WorkOut.jsx":"6","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/LandingPage/LandingPage.jsx":"7","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/InnerNaviBar.jsx":"8","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/Dashboard.jsx":"9","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Auth/Login.jsx":"10","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Auth/Register.jsx":"11","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/PendingCoachReview.jsx":"12","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/RecentlyCompleted.jsx":"13","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/PendingAthlete.jsx":"14","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/TodaysAgenda.jsx":"15","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachDash.jsx":"16","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteDash.jsx":"17","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthTodayAgenda.jsx":"18","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthUpcoming.jsx":"19","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthRecentlyCompleted.jsx":"20","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthPendingResults.jsx":"21"},{"size":546,"mtime":1607832025930,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1607664515871,"results":"24","hashOfConfig":"23"},{"size":217,"mtime":1607856769819,"results":"25","hashOfConfig":"23"},{"size":1135,"mtime":1607833207954,"results":"26","hashOfConfig":"23"},{"size":672,"mtime":1607842514958,"results":"27","hashOfConfig":"23"},{"size":10446,"mtime":1607856832475,"results":"28","hashOfConfig":"23"},{"size":2407,"mtime":1607832025892,"results":"29","hashOfConfig":"23"},{"size":1965,"mtime":1607838817474,"results":"30","hashOfConfig":"23"},{"size":502,"mtime":1607857297525,"results":"31","hashOfConfig":"23"},{"size":2628,"mtime":1607842514964,"results":"32","hashOfConfig":"23"},{"size":4943,"mtime":1607842514972,"results":"33","hashOfConfig":"23"},{"size":737,"mtime":1607856354127,"results":"34","hashOfConfig":"23"},{"size":732,"mtime":1607856347422,"results":"35","hashOfConfig":"23"},{"size":738,"mtime":1607856326653,"results":"36","hashOfConfig":"23"},{"size":721,"mtime":1607856342305,"results":"37","hashOfConfig":"23"},{"size":3817,"mtime":1607857393791,"results":"38","hashOfConfig":"23"},{"size":3786,"mtime":1607856045224,"results":"39","hashOfConfig":"23"},{"size":721,"mtime":1607856311874,"results":"40","hashOfConfig":"23"},{"size":723,"mtime":1607856296695,"results":"41","hashOfConfig":"23"},{"size":936,"mtime":1607856468134,"results":"42","hashOfConfig":"23"},{"size":731,"mtime":1607856302028,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"mdkyf9",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/index.js",[],["91","92"],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/reportWebVitals.js",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/App.js",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/BetterAthletes.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/AllRoutes.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/WorkOut.jsx",["93"],"import React, { useState, useEffect } from 'react'\nimport { Fragment } from 'react'\nimport { Col, Row, Form, Button, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction WorkOut({ name }) {\n    const [athletes, setAthletes] = useState([])\n    const [inputForm, setForm] = useState(\n        {\n            athletes: [],\n            sets: [\n                    {\n                        set: \"\",\n                        data: [\n                                {\n                                    exercise: \"\",\n                                    reps: \"\",\n                                    rest: \"\",\n                                    target: \"\"\n                                }\n                        ]   \n                    }\n                ]\n        })\n\n    \n    function AddSet(){\n        let new_form = {...inputForm}\n        new_form.sets.push({\n                set: \"\",\n                data: [\n                    {\n                        exercise: \"\",\n                        reps: \"\",\n                        rest: \"\",\n                        target: \"\"\n                    }\n                ]\n            })\n        setForm(new_form)\n    }\n\n    function RemoveSet(i){\n        let obj = {...inputForm};\n        obj.sets.splice(i,1)\n        setForm(obj)\n    }\n\n    function AddInput(i) {\n        let input = {...inputForm}\n        let new_form = input.sets[i].data\n        new_form.push({\n            exercise: \"\",\n            reps: \"\",\n            rest: \"\",\n            target: \"\"\n        })\n        setForm(input)\n    }\n\n    function RemoveInput(i, ii) {\n        let input = {...inputForm};\n        let list_data = input.sets[i].data;\n        list_data.splice(ii, 1);\n        setForm(input)\n    }\n\n    function repeatSet(i) {\n        let repeat_set = {...inputForm};\n        let new_obj = {\n            set: repeat_set.sets[i].set + 1,\n            data: repeat_set.sets[i].data\n        }\n        repeat_set.sets.push(new_obj)\n        setForm(repeat_set)\n\n    }\n\n    function ChangeHandler(e, i, ii) {\n        let { name, value } = e.target;\n        let form_data = {...inputForm};\n\n        if (name === \"athletes\"){\n            form_data.athletes.push(value)\n        } else if (name !== \"athletes\"){\n            form_data.sets[i].set = i+1;\n            form_data.sets[i].data[ii][name] = value;\n        }\n        \n        setForm(form_data)\n    }\n    console.log(inputForm)\n\n\n\n    // =========================== TO UPDATE AXIOS ONCE API ROUTES FINALISED ================================\\\\\n    /**\n     * @POST = send data from INPUT FORM STATE TO DJANGO DB\n     * @reminder = to check data format, convert obj to array to send to back using another set state for submitworkout func\n     */\n    async function submitWorkout(){\n        try {\n            let response = await axios.post(process.env.REACT_APP_LOCALHOST + `/`, inputForm);\n        } catch (error) {\n            return error\n        }\n    }\n\n    /**\n     * @GET = retrieve Athlete data and populate in drop down list\n     */\n\n    async function getAthletes(){\n        try {\n            let response = await axios.get(process.env.REACT_APP_LOCALHOST+ `/`);\n            setAthletes(response.data) // response.data? or smtg less, check it later\n        }catch(error){\n            return error\n        }\n    }\n\n    useEffect(() => {\n        getAthletes();\n    }, [])\n\n    return (\n        <Fragment>\n            <Row className=\"\">\n                <Col md={12} className=\"border pt-3\">\n                    <h4>SETS</h4>\n                </Col>\n                <Col md={12} className=\"my-3 py-3 outer_form\">\n                <Form>\n                <DropdownButton \n                id=\"dropdown-basic-button\" \n                variant=\"info\" \n                title=\"Dropdown button\" \n                className=\"d-flex justify-content-end\"\n                onChange={(e)=>ChangeHandler(e)}\n                >\n                    <Dropdown.Item >\n                        <Form.Group controlId=\"formBasicCheckbox\">\n                            <Form.Check type=\"checkbox\" label=\"Select One\" name=\"athletes\" value={1}/>\n                        </Form.Group>\n                    </Dropdown.Item>\n                    {athletes.map((item,index)=>(\n                        <Dropdown.Item key={index} >\n                            <Form.Group controlId=\"formBasicCheckbox\">\n                                <Form.Check type=\"checkbox\" label={item} value={item}/>\n                            </Form.Group>\n                        </Dropdown.Item>\n                    ))}\n\n                </DropdownButton>\n                    {inputForm.sets.map((item, index) => (\n                        <Form.Group className=\"my-3 py-3 form_set\" key={index}>\n                            <Row className=\"no-gutters\">\n                                <Col md={8} className=\"\">\n                                    <h4>SET {index + 1}</h4>\n                                </Col>\n                                <Col md={1} className=\"d-flex justify-content-center\" >{inputForm.sets.length !== 1 &&\n                                    <Button className=\"px-3\"\n                                        onClick={() => RemoveSet(index)}\n                                        variant=\"outline-danger\"> - </Button>}\n                                </Col>\n                                <Col md={1} className=\"d-flex justify-content-center\">\n                                    {inputForm.sets.length - 1 === index &&\n                                        <Button\n                                            onClick={AddSet}\n                                            variant=\"outline-secondary\"> + </Button>}\n                                </Col>\n                                <Col md={2} className=\"d-flex justify-content-center\">\n                                        <Button\n                                            onClick={()=>repeatSet(index)}\n                                            variant=\"secondary\"> Repeat Set </Button>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col md={4} >\n                                    <Form.Label>Exercises</Form.Label>\n                                </Col>\n                                <Col md={2} >\n                                    <Form.Label>Reps</Form.Label>\n                                </Col>\n                                <Col md={2} >\n                                    <Form.Label>Rest</Form.Label>\n                                </Col>\n                                <Col md={2} >\n                                    <Form.Label>Target</Form.Label>\n                                </Col>\n                                <Col md={2} ></Col>\n                            </Row>\n\n\n                            {inputForm.sets[index].data.map((item2, index2) => (\n\n                                <Row key={index} className=\"my-2\">\n                                    <Col md={4} >\n                                        <Form.Control\n                                            name=\"exercise\"\n                                            onChange={(e) => ChangeHandler(e,index, index2)}\n                                            value={item2.exercise}\n                                            placeholder=\"Workout\" />\n                                    </Col>\n                                    <Col md={2} >\n                                        <Form.Control\n                                            name=\"reps\"\n                                            onChange={(e) => ChangeHandler(e,index, index2)}\n                                            value={item2.reps}\n                                            placeholder=\"Reps\" />\n                                    </Col>\n                                    <Col md={2}>\n                                        <Form.Control\n                                            name=\"rest\"\n                                            onChange={(e) => ChangeHandler(e,index, index2)}\n                                            value={item2.rest}\n                                            placeholder=\"Rest\" />\n                                    </Col>\n                                    <Col md={2}>\n                                        <Form.Control\n                                            name=\"target\"\n                                            onChange={(e) => ChangeHandler(e,index, index2)}\n                                            value={item2.target}\n                                            placeholder=\"Target\" />\n                                    </Col>\n                                    <Col md={2}>\n                                        <Row>\n                                            <Col>{inputForm.sets[index].data.length !== 1 &&\n                                                <Button key={index} className=\"mr10\"\n                                                    onClick={() => RemoveInput(index, index2)}\n                                                    variant=\"outline-danger\"> - </Button>}\n                                            </Col>\n                                            <Col>\n                                                {inputForm.sets[index].data.length - 1 === index2 &&\n                                                    <Button\n                                                        key={index}\n                                                        onClick={()=>AddInput(index)}\n                                                        variant=\"outline-secondary\"> + </Button>}\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            ))}\n\n                        </Form.Group>\n                    ))}\n                    </Form>\n\n                    <Row >\n                        <Col md={12} className=\"d-flex flex-row-reverse\">\n                            <Button \n                            variant=\"warning\" \n                            type=\"submit\"\n                            onClick={submitWorkout}\n                            >Add Exercise</Button>\n                        </Col>\n                    </Row>\n                </Col>\n\n\n            </Row>\n        </Fragment>\n    )\n}\n\nexport default WorkOut\n","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/LandingPage/LandingPage.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/InnerNaviBar.jsx",["94","95","96"],"import React, { Fragment } from 'react'\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar, NavDropdown, Button, FormControl, Form, Nav, Container} from \"react-bootstrap\";\n\n\nfunction InnerNaviBar() {\n    return (\n        <Fragment>\n            <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand href=\"/betterathletes\">BETTER ATHLETES</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/betterathletes/Club\" className=\"border-right px-3\">\n                                Club(Athlete List)\n                        </Nav.Link>\n                        <Nav.Link href=\"/betterathletes/view_workout\" className=\"border-right px-3\">\n                                Workouts \n                        </Nav.Link>\n                        <Nav.Link href=\"/Rankings\" className=\"px-3\">\n                                Rankings\n                        </Nav.Link>\n                    </Nav>\n                <Form inline>\n                    <div className=\"px-1\">\n                        <NavLink to=\"/profile_settings\" style={{ textDecoration: 'none' }} className=\"text-secondary\">\n                            <Button variant=\"outline-info\">\n                                Profile Settings\n                            </Button> \n                        </NavLink>\n                    </div>\n                    <div className=\"px-1\">\n                        <NavLink to=\"/logout\" style={{ textDecoration: 'none' }} className=\"alert\">\n                            <Button variant=\"outline-secondary\">\n                                Logout\n                            </Button>\n                        </NavLink>\n                    </div>\n                </Form>\n            </Navbar.Collapse>\n            </Navbar>\n        </Fragment>\n    )\n}\n\nexport default InnerNaviBar\n","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/Dashboard.jsx",["97"],"import React, { useState } from 'react'\nimport { Row } from 'react-bootstrap'\nimport AthleteDash from './DashboardItems/AthleteDash'\nimport CoachDash from './DashboardItems/CoachDash'\n\nfunction Dashboard() {\n    /* GET USER TYPE FROM TOKEN ?????????????????????? */\n    const [userType, setUserType] = useState(\"Coach\")\n\n    return (\n        <Row>\n            {userType === \"Coach\" ?\n            <CoachDash />:\n            <AthleteDash />\n            }\n        </Row>\n    )\n}\n\nexport default Dashboard\n","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Auth/Login.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Auth/Register.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/PendingCoachReview.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/RecentlyCompleted.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/PendingAthlete.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/TodaysAgenda.jsx",[],["98","99"],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachDash.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteDash.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthTodayAgenda.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthUpcoming.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthRecentlyCompleted.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthPendingResults.jsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":103,"column":17,"nodeType":"106","messageId":"107","endLine":103,"endColumn":25},{"ruleId":"104","severity":1,"message":"108","line":3,"column":18,"nodeType":"106","messageId":"107","endLine":3,"endColumn":29},{"ruleId":"104","severity":1,"message":"109","line":3,"column":39,"nodeType":"106","messageId":"107","endLine":3,"endColumn":50},{"ruleId":"104","severity":1,"message":"110","line":3,"column":63,"nodeType":"106","messageId":"107","endLine":3,"endColumn":72},{"ruleId":"104","severity":1,"message":"111","line":8,"column":22,"nodeType":"106","messageId":"107","endLine":8,"endColumn":33},{"ruleId":"100","replacedBy":"112"},{"ruleId":"102","replacedBy":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'NavDropdown' is defined but never used.","'FormControl' is defined but never used.","'Container' is defined but never used.","'setUserType' is assigned a value but never used.",["114"],["115"],"no-global-assign","no-unsafe-negation"]