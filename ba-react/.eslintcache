[{"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/index.js":"1","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/App.js":"2","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/reportWebVitals.js":"3","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/AllRoutes.jsx":"4","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/LandingPage/LandingPage.jsx":"5","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Auth/Register.jsx":"6","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/BetterAthletes.jsx":"7","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Auth/Login.jsx":"8","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/func/axiosApi.js":"9","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/Dashboard.jsx":"10","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/InnerNaviBar.jsx":"11","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/ViewWorkOut.jsx":"12","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/AddWorkOut.jsx":"13","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteDash.jsx":"14","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachDash.jsx":"15","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/RecentlyCompleted.jsx":"16","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/TodaysAgenda.jsx":"17","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/PendingAthlete.jsx":"18","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/PendingCoachReview.jsx":"19","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthRecentlyCompleted.jsx":"20","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthPendingResults.jsx":"21","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthUpcoming.jsx":"22","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthTodayAgenda.jsx":"23"},{"size":607,"mtime":1607918306119,"results":"24","hashOfConfig":"25"},{"size":217,"mtime":1607917337576,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1607664515871,"results":"27","hashOfConfig":"25"},{"size":672,"mtime":1607917133764,"results":"28","hashOfConfig":"25"},{"size":2407,"mtime":1607832025892,"results":"29","hashOfConfig":"25"},{"size":5471,"mtime":1607918153734,"results":"30","hashOfConfig":"25"},{"size":1097,"mtime":1607918153748,"results":"31","hashOfConfig":"25"},{"size":3735,"mtime":1607918153726,"results":"32","hashOfConfig":"25"},{"size":304,"mtime":1607918153756,"results":"33","hashOfConfig":"25"},{"size":502,"mtime":1607917230202,"results":"34","hashOfConfig":"25"},{"size":2057,"mtime":1607918153720,"results":"35","hashOfConfig":"25"},{"size":11352,"mtime":1607918153749,"results":"36","hashOfConfig":"25"},{"size":15024,"mtime":1607918442199,"results":"37","hashOfConfig":"25"},{"size":3786,"mtime":1607917230203,"results":"38","hashOfConfig":"25"},{"size":3817,"mtime":1607917230211,"results":"39","hashOfConfig":"25"},{"size":732,"mtime":1607917230215,"results":"40","hashOfConfig":"25"},{"size":721,"mtime":1607917230217,"results":"41","hashOfConfig":"25"},{"size":738,"mtime":1607917230213,"results":"42","hashOfConfig":"25"},{"size":737,"mtime":1607917230214,"results":"43","hashOfConfig":"25"},{"size":936,"mtime":1607917230207,"results":"44","hashOfConfig":"25"},{"size":731,"mtime":1607917230206,"results":"45","hashOfConfig":"25"},{"size":723,"mtime":1607917230210,"results":"46","hashOfConfig":"25"},{"size":721,"mtime":1607917230209,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"mdkyf9",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/index.js",[],["101","102"],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/App.js",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/reportWebVitals.js",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/AllRoutes.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/LandingPage/LandingPage.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Auth/Register.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/BetterAthletes.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Auth/Login.jsx",["103","104"],"import { NavLink } from \"react-router-dom\";\nimport { Col, Form, Container, Button } from \"react-bootstrap\";\nimport React, {useState} from 'react';\nimport jwt_decode from 'jwt-decode';\nimport InnerNaviBar from \"../../InnerNaviBar\";\nimport {axiosInstance} from \"../../../func/axiosApi\"\n\nfunction Login() {\n  const [user, setUser] = useState({});\n\n  function handleChange(e) {\n    setUser((user) => ({ ...user, [e.target.name]: e.target.value }));\n  }\n\n  async function handleSubmit(e){\n    e.preventDefault();\n    try {\n      let resp = await axiosInstance.post(\"login\",{username: user.username, password: user.password});\n      axiosInstance.defaults.headers['Authorization'] = \"JWT \" + resp.data.access;\n      localStorage.setItem(\"token\", resp.data.access);\n      let token = localStorage.getItem(\"token\");\n      let decoded = jwt_decode(token);\n      localStorage.setItem(\"user\", decoded.username);\n      localStorage.setItem(\"is_coach\", decoded.is_coach);\n      // setIsAuth(true);\n    } catch (error) {\n      console.log(error);\n    }    \n  }\n\n  // Logout button that removes token\n  function logout(){\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"is_coach\");\n    axiosInstance.defaults.headers['Authorization'] = null;\n  }\n\n  // Test function to test token and authorization. Remove when done.\n  async function test(){\n    try {\n      let resp = await axiosInstance.get(\"workouts\");\n      console.log(resp)\n      // setIsAuth(true);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function test2(){\n    try {\n      let resp = await axiosInstance.post(\"token/verify\", {\n        'token': localStorage.getItem('token'),\n        'Content-Type': 'application/json',\n        'accept': 'application/json'\n      });\n    } catch (error) {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"is_coach\");\n      axiosInstance.defaults.headers['Authorization'] = null;\n      // setIsAuth(false);\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <Container className=\"text-center\">\n        <Col>\n          <h3>Better Athletes</h3>\n          <Form onSubmit={handleSubmit}>\n            <div>User Login</div>\n            {/* Username Input */}\n            <Form.Row>\n            <Form.Label>Username</Form.Label>\n              <Form.Control\n                placeholder=\"username\"\n                onChange={handleChange}\n                name=\"username\"\n              />\n            </Form.Row>\n            {/* Password Input */}\n            <Form.Row className=\"mb-3\">\n            <Form.Label>Password</Form.Label>\n              <Form.Control\n                onChange={handleChange}\n                placeholder=\"password\"\n                name=\"password\"\n                type=\"password\"\n              />\n            </Form.Row>\n            {/* Login button */}\n            <Form.Row className=\"mb-3\">\n              <Button type=\"submit\" block>\n                Login\n              </Button>\n            </Form.Row>\n          </Form>\n          {/* Logout button */}\n          <Form.Row className=\"mb-3\">\n          <Button onClick={logout} block>\n                Logout\n          </Button>\n          </Form.Row>\n          <Button onClick={test} block>\n                {/* For you to test the GET function to get workouts list */}\n                Test\n          </Button>\n          <Button onClick={test2} block>\n                {/* For you to test the GET function to get workouts list */}\n                Test2\n          </Button>\n          <NavLink to=\"/register\">Sign Up Now </NavLink>\n        </Col>\n      </Container>\n    </div>\n  );\n}\n\nexport default Login\n","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/func/axiosApi.js",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/Dashboard.jsx",["105"],"import React, { useState } from 'react'\nimport { Row } from 'react-bootstrap'\nimport AthleteDash from './DashboardItems/AthleteDash'\nimport CoachDash from './DashboardItems/CoachDash'\n\nfunction Dashboard() {\n    /* GET USER TYPE FROM TOKEN ?????????????????????? */\n    const [userType, setUserType] = useState(\"Coach\")\n\n    return (\n        <Row>\n            {userType === \"Coach\" ?\n            <CoachDash />:\n            <AthleteDash />\n            }\n        </Row>\n    )\n}\n\nexport default Dashboard\n","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/InnerNaviBar.jsx",["106","107","108","109","110"],"import React, { Fragment, useEffect, useState } from 'react'\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar, NavDropdown, Button, FormControl, Form, Nav, Container} from \"react-bootstrap\";\n\n\nfunction InnerNaviBar() {\n    let user = localStorage.getItem(\"user\");\n\n    return (\n        <Fragment>\n            <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand href=\"/betterathletes\">BETTER ATHLETES</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/betterathletes/Club\" className=\"border-right px-3\">\n                                Club(Athlete List)\n                        </Nav.Link>\n                        <Nav.Link href=\"/betterathletes/view_workout\" className=\"border-right px-3\">\n                                Workouts \n                        </Nav.Link>\n                        <Nav.Link href=\"/Rankings\" className=\"px-3\">\n                                Rankings\n                        </Nav.Link>\n                    </Nav>\n                <Form inline>\n                    Logged in as: \n                    <div className=\"px-1\">\n                        <NavLink to=\"/profile_settings\" style={{ textDecoration: 'none' }} className=\"text-secondary\">\n                            <Button variant=\"outline-info\">\n                                {user}\n                            </Button> \n                        </NavLink>\n                    </div>\n                    <div className=\"px-1\">\n                        <NavLink to=\"/logout\" style={{ textDecoration: 'none' }} className=\"alert\">\n                            <Button variant=\"outline-secondary\">\n                                Logout\n                            </Button>\n                        </NavLink>\n                    </div>\n                </Form>\n            </Navbar.Collapse>\n            </Navbar>\n        </Fragment>\n    )\n}\n\nexport default InnerNaviBar\n","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/ViewWorkOut.jsx",["111","112","113","114"],"import React, { useState, useEffect, Fragment } from 'react'\nimport { Col, Row, Form, Button, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\n\n\n\nfunction ViewWorkOut() {\n    const [indexSet, setIndexSet] = useState(0)\n    const [newComments, setNewComments] = useState({})\n    /**\n     * @WORKOUT - updatethis this when api data obtained\n     */\n    const [workout, setWorkout] = useState(\n        [\n            {\n                set: \"1\",\n                data: [\n                    {\n                        exercise: \"Lunges\",\n                        reps: \"10\",\n                        rest: \"2\",\n                        target: \"10min\",\n                        result: \"\",\n                        comments: [{username: \"ABC\", comment: \"nice stuff there\"},{username: \"Coach A\", comment: \"good stuff there\"}]\n                    },                    \n                    {\n                        exercise: \"Burpees\",\n                        reps: \"10\",\n                        rest: \"2min\",\n                        target: \"12min\",\n                        result: \"\",\n                        comments: [{}]\n                    }\n                ]\n            },            \n            {\n                set: \"2\",\n                data: [\n                    {\n                        exercise: \"Swimming\",\n                        reps: \"2\",\n                        rest: \"2min\",\n                        target: \"250m\",\n                        result: \"\",\n                        comments: [{}]\n                    },                    \n                    {\n                        exercise: \"Sprinting\",\n                        reps: \"100m\",\n                        rest: \"1min\",\n                        target: \"30s\",\n                        result: \"\",\n                        comments: [{}]\n                    }\n                ]\n            }\n        ]\n    )\n    const [exerciseSelection, setExerciseSelection] = useState([])\n    \n    \n    function selectionHandler(e){\n        let {value} = e.target;\n        console.log(value)\n        setExerciseSelection(workout[Number(value)-1].data)\n    }\n    \n    function commentHandler(e){\n        let {name, value} = e.target;\n        setNewComments({...newComments, [name]: value})\n    }\n\n    console.log(indexSet)\n    console.log(exerciseSelection)\n    console.log(newComments)\n    //=========================AXIOS API TO BE UPDATED ================================\\\\\n\n    async function getWorkout() {\n        try {\n            let response = await axios.get(process.env.REACT_APP_LOCALHOST + `/`)\n            // setWorkout(response.data) to update once API confirmed\n        } catch (error) {\n            return error\n        }\n    }\n\n    useEffect(() => {\n        getWorkout();\n    }, [])\n\n    return (\n        <Fragment>\n            <Row className=\"\">\n                <Col md={12} className=\"border pt-3\">\n                    <h4>SETS</h4>\n                </Col>\n                <Col md={12} className=\"my-3 py-3 outer_form\">\n                    <Form>\n                        <Row className=\"no-gutters\">\n                            <Col md={10}></Col>\n                            <Col md={2} className=\"d-flex justify-content-center\">\n                            </Col>\n                        </Row>\n                        {workout.map((item, index) => (\n                            <Form.Group className=\"my-3 py-3 form_set\" key={index}>\n                                <Row className=\"no-gutters\">\n                                    <Col md={8} className=\"\">\n                                        <h4>SET {index + 1}</h4>\n                                    </Col>\n                                    <Col md={1} className=\"d-flex justify-content-center\" >\n                                    </Col>\n                                    <Col md={1} className=\"d-flex justify-content-center\">\n                                    </Col>\n                                    <Col md={2} className=\"d-flex justify-content-center\">\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col md={4} >\n                                        <Form.Label class=\"font-weight-bold\">Exercises</Form.Label>\n                                    </Col>\n                                    <Col md={2} >\n                                        <Form.Label class=\"font-weight-bold\">Reps</Form.Label>\n                                    </Col>\n                                    <Col md={2} >\n                                        <Form.Label class=\"font-weight-bold\">Rest</Form.Label>\n                                    </Col>\n                                    <Col md={2} >\n                                        <Form.Label class=\"font-weight-bold\">Target</Form.Label>\n                                    </Col>\n                                    <Col md={2} >\n                                        <Form.Label class=\"font-weight-bold\">Input Results</Form.Label>\n                                    </Col>\n                                </Row>\n\n\n                                {item.data.map((item2, index2) => (\n                                    \n                                    <Row key={index2} className=\"my-2\">\n                                        <Col md={4} className=\"d-flex align-items-center my-2\">\n                                            <div>\n                                                {item2.exercise}\n                                            </div>\n                                        </Col>\n                                        <Col md={2} className=\"d-flex align-items-center my-2\">\n                                            <div>\n                                                {item2.reps}\n                                            </div>\n\n                                        </Col>\n                                        <Col md={2} className=\"d-flex align-items-center my-2\">\n                                            <div>\n                                                {item2.rest}\n                                            </div>\n                                        </Col>\n                                        <Col md={2} className=\"d-flex align-items-center my-2\">\n                                            <div>\n                                                {item2.target}\n                                            </div>\n\n                                        </Col>\n                                        <Col md={2} className=\"d-flex align-items-center my-2\">\n                                            <Form.Control\n                                            name=\"results\"\n                                            // onChange={(e) => ChangeHandler(e,index, index2)}\n                                            placeholder=\"Results\"/>\n                                        </Col>\n                                        <Col md={12} className=\"d-flex align-items-center my-2 no-gutters\">\n                                           <Col md={12} className=\"border\">\n                                                {item2.comments.map((item3,index)=>(\n                                                    <div key={index}>\n                                                        {item3.username == null ? <text style={{fontWeight: 'bold'}}> No comments</text> : <p><text style={{fontWeight: 'bold'}}>{item3.username}</text><br/>{item3.comment}</p> }\n                                                    </div>\n                                                ))}\n                                           </Col>\n                                        </Col>\n                                    </Row>\n                                ))}\n\n                            </Form.Group>\n                        ))}\n                    </Form>\n\n                    <Row >\n                        <Col md={12} className=\"d-flex flex-row-reverse align-items-center my-3\">\n                            <Button>Add Results</Button>\n                        </Col>\n                        <Col md={6} className=\"d-flex flex-row align-items-center my-2\">\n                            <h4>Enter Workout Comments</h4>\n                        </Col>\n                        <Col md={3} className=\"d-flex flex-row align-items-center my-2\">\n                            <Form>\n                                <Form.Group as={Col} controlId=\"formGridState\">\n                                    <Form.Label>SET</Form.Label>\n                                    <Form.Control \n                                    as=\"select\" \n                                    defaultValue=\"Choose...\"\n                                    onChange={(e)=>{\n                                        commentHandler(e);\n                                        selectionHandler(e)\n                                    }} \n                                    name=\"set\"\n                                    >\n                                    {workout.map((item,index)=>(\n                                            <option\n                                            key={index} \n                                            value={item.set}                                   \n                                            >SET {item.set}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col md={3} className=\"d-flex flex-row align-items-center my-2\">\n                        <Form>\n                            <Form.Group as={Col} controlId=\"formGridState\">\n                                    <Form.Label>Exercise</Form.Label>\n                                    <Form.Control \n                                    as=\"select\" \n                                    defaultValue=\"Choose...\"\n                                    onChange={(e)=>commentHandler(e)} \n                                    name=\"exercise\"\n                                    >\n                                    {exerciseSelection.map((item,index)=>(\n                                            <option\n                                            key={index} \n                                            onClick={()=>setIndexSet(index)} \n                                            value={item.set}                                   \n                                            >Exercise {item.exercise}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                                                    \n                        <Col md={12} className=\"my-2\">\n                            <Form.Control \n                            as=\"textarea\" \n                            rows={3} \n                            name=\"comment\"\n                            onChange={(e)=>commentHandler(e)}\n                            />\n                        </Col>\n                    </Row>\n                </Col>\n\n\n            </Row>\n        </Fragment>\n    )\n}\n\nexport default ViewWorkOut\n","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/AddWorkOut.jsx",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"import React, { useState, useEffect } from 'react'\nimport DatePicker from 'react-modern-calendar-datepicker';\nimport { Fragment } from 'react'\nimport { Col, Row, Form, Button, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction WorkOut() {\n    const [athletes, setAthletes] = useState([])\n    const [date, setDate] = useState(null)\n    const [exer, setExer] = useState([])\n    const [inputForm, setForm] = useState(\n        {\n            athletes: [],\n            workout_name: \"\",\n            workout_date:{},\n            sets: [\n                    {\n                        set: \"\",\n                        data: [\n                                {   \n                                    exercise: \"\",\n                                    reps: \"\",\n                                    rests: \"\",\n                                    targets: \"\"\n                                }\n                        ]   \n                    }\n                ]\n        })\n    \n    const [djangoData, setDjangoData] = useState(\n        {\n            athletes: [],\n            workout_name:\"\",\n            exercise: [[]],\n            reps: [],\n            targets: [],\n            rests: [],\n        }\n    )\n    \n    function AddSet(){\n        let new_form = {...inputForm}\n        new_form.sets.push({\n                set: \"\",\n                data: [\n                    {\n                        exercise: \"\",\n                        reps: \"\",\n                        rests: \"\",\n                        targets: \"\"\n                    }\n                ]\n            })\n        setForm(new_form)\n    }\n\n    function RemoveSet(i){\n        let obj = {...inputForm};\n        obj.sets.splice(i,1)\n        setForm(obj)\n    }\n\n    function AddInput(i) {\n        let input = {...inputForm}\n        let new_form = input.sets[i].data\n        new_form.push({\n            exercise: \"\",\n            reps: \"\",\n            rests: \"\",\n            targets: \"\"\n        })\n        setForm(input)\n    }\n\n    function RemoveInput(i, ii) {\n        let input = {...inputForm};\n        let list_data = input.sets[i].data;\n        list_data.splice(ii, 1);\n        setForm(input)\n    }\n\n    function repeatSet(i) {\n        let repeat_set = {...inputForm};\n        let new_obj = {\n            set: repeat_set.sets[i].set + 1,\n            data: repeat_set.sets[i].data\n        }\n        repeat_set.sets.push(new_obj)\n        setForm(repeat_set)\n\n    }\n\n    function ChangeHandler(e, i, ii) {\n        let { name, value } = e.target;\n        let form_data = {...inputForm};\n        console.log(\"hello!\")\n        if (name == \"athletes\"){\n            form_data.athletes.push(value)\n        } else if (name == \"workout_name\") {\n            form_data.athletes = value\n        } else if (name != \"athletes\"){\n            form_data.sets[i].set = i+1;\n            form_data.sets[i].data[ii][name] = value;\n            form_data.workout_date = date;\n        }\n        \n        setForm(form_data)\n        djangoHandler(e,i,ii);\n    }\n\n    let newArr = []\n\n    // let obj = {\n    //     xxx: [],\n    //     sdasda\n    // }\n\n    function djangoHandler(e,i,ii){\n        let { name, value } = e.target;\n        let django_data = {...djangoData};\n        \n        if (name == \"athletes\"){\n            django_data.athletes.push(value)\n        } else if (name == \"workout_name\"){\n            django_data.workout_name = value\n        } else if (name == \"exercise\"){\n            \n            django_data.exercise[i][ii] = value\n        }\n        setDjangoData(django_data)\n        console.log(djangoData)\n        // [[[]],[[[]]]]\n    }\n    // console.log(newArr)\n\n    // console.log(inputForm)\n    // exercise: [],\n    //         reps: [],\n    //         targets: [],\n    //         rests: []\n\n    function djangoConversion(){\n        let exercise_arr = new Array(inputForm.sets.length).fill([])\n        let reps_arr = new Array(inputForm.sets.length).fill([])\n        let targets_arr = new Array(inputForm.sets.length).fill([])\n        let rests_arr = new Array(inputForm.sets.length).fill([])\n        let count = 0;\n        let data = inputForm.sets;\n        let arr = []\n        let merged = [].concat(arr)\n\n        // console.log(length_of_arr)\n        // // data.forEach((item,index)=>{\n        // //     arr.push(item.data[index].exercise)\n        // // })\n        // console.log(arr)\n        // console.log(merged)\n        // item.data.forEach((item2,index2)=>{\n        //     console.log(count)\n        //     if (item2[\"exercise\"]){\n        //         exercise_arr[count].push(item2[\"exercise\"])\n        //     } else if (item2[\"reps\"] && index == index2){\n        //         reps_arr[index].push(item2[\"reps\"])\n        //     } else if (item2[\"targets\"] && index == index2){\n        //         targets_arr[index].push(item2[\"targets\"])\n        //     } else if (item2[\"rests\"] && index == index2){\n        //         rests_arr[index].push(item2[\"rests\"])\n        //     }\n            \n        // })\n        // count += 1\n        // console.log(count)\n    }\n    // djangoConversion();\n\n\n\n\n    // console.log(inputForm)\n\n\n\n    // =========================== TO UPDATE AXIOS ONCE API ROUTES FINALISED ================================\\\\\n    /**\n     * @POST = send data from INPUT FORM STATE TO DJANGO DB\n     * @reminder = to check data format, convert obj to array to send to back using another set state for submitworkout func\n     */\n    async function submitWorkout(){\n        try {\n            let response = await axios.post(\"http://localhost:8000/api/workouts\",inputForm, {\n                headers: {\n                    'Authorization': \"JWT \" + localStorage.getItem('token'),\n                    'Content-Type': 'application/json',\n                    'accept': \"application/json\"\n                }\n            })\n        } catch (error) {\n            return error\n        }\n    }\n\n    /**\n     * @GET = retrieve Athlete data and populate in drop down list\n     */\n\n    async function getAthletes(){\n        try {\n            let response = await axios.get(process.env.REACT_APP_LOCALHOST+ `/`);\n            setAthletes(response.data) // response.data? or smtg less, check it later\n        }catch(error){\n            return error\n        }\n    }\n\n    async function getData(){\n        try {\n            let response = await axios.get(\"http://localhost:8000/api/workouts\", {\n                headers: {\n                    'Authorization': \"JWT \" + localStorage.getItem('token'),\n                    'Content-Type': 'application/json',\n                    'accept': \"application/json\"\n                }\n            });\n        } catch (error) {\n            return error\n        }\n    }\n\n    useEffect(() => {\n        // getAthletes();\n        getData();\n    }, [])\n\n    return (\n        <Fragment>\n            <Row className=\"\">\n                <Col md={12} className=\"border pt-3\">\n                    <h4>SETS</h4>\n                </Col>\n                <Col md={12} className=\"my-3 py-3 outer_form\">\n                <Form>\n                    <Row className=\"no-gutters\">\n                        <Col md={3}>\n                        <Form.Control\n                            name=\"workout_name\"\n                            onChange={(e) => ChangeHandler(e)}\n                            placeholder=\"Designate a workout name\" \n                            />\n                        </Col>\n                        <Col md={1}>\n\n                        </Col>\n                        <Col md={3}>\n                        <DatePicker\n                            value={date}\n                            onChange={setDate}\n                            inputPlaceholder=\"Select a day\"\n                            shouldHighlightWeekends\n                            />\n                        </Col>\n                        <Col md={3}>\n\n                        </Col>\n                        <Col md={2} className=\"d-flex justify-content-center\">\n\n\n                            <DropdownButton \n                            id=\"dropdown-basic-button\" \n                            variant=\"info\" \n                            title=\"Athletes\" \n                            className=\"d-flex justify-content-end\"\n                            onChange={(e)=>ChangeHandler(e)}\n                            >\n                                <Dropdown.Item >\n                                    <Form.Group controlId=\"formBasicCheckbox\">\n                                        <Form.Check type=\"checkbox\" label=\"Select One\" name=\"athletes\" value={1}/>\n                                    </Form.Group>\n                                </Dropdown.Item>\n                                {athletes.map((item,index)=>(\n                                    <Dropdown.Item key={index} >\n                                        <Form.Group controlId=\"formBasicCheckbox\">\n                                            <Form.Check type=\"checkbox\" label={item} value={item}/>\n                                        </Form.Group>\n                                    </Dropdown.Item>\n                                ))}\n\n                            </DropdownButton>\n                        </Col>\n                    </Row>\n                    {inputForm.sets.map((item, index) => (\n                        <Form.Group className=\"my-3 py-3 form_set\" key={index}>\n                            <Row className=\"no-gutters\">\n                                <Col md={8} className=\"\">\n                                    <h4>SET {index + 1}</h4>\n                                </Col>\n                                <Col md={1} className=\"d-flex justify-content-center\" >{inputForm.sets.length !== 1 &&\n                                    <Button className=\"px-3\"\n                                        onClick={() => RemoveSet(index)}\n                                        variant=\"outline-danger\"> - </Button>}\n                                </Col>\n                                <Col md={1} className=\"d-flex justify-content-center\">\n                                    {inputForm.sets.length - 1 === index &&\n                                        <Button\n                                            onClick={AddSet}\n                                            variant=\"outline-secondary\"> + </Button>}\n                                </Col>\n                                <Col md={2} className=\"d-flex justify-content-center\">\n                                        <Button\n                                            onClick={()=>repeatSet(index)}\n                                            variant=\"secondary\"> Repeat Set </Button>\n                                </Col>\n                            </Row>\n                            <Row>\n                            \n                                <Col md={4} >\n                                    <Form.Label>Exercise</Form.Label>\n                                </Col>\n                                <Col md={2} >\n                                    <Form.Label>Reps</Form.Label>\n                                </Col>\n                                <Col md={2} >\n                                    <Form.Label>Rest</Form.Label>\n                                </Col>\n                                <Col md={2} >\n                                    <Form.Label>Target</Form.Label>\n                                </Col>\n                            </Row>\n\n\n                            {inputForm.sets[index].data.map((item2, index2) => (\n\n                                <Row key={index2} className=\"my-2\">\n                                    <Col md={4} >\n                                        <Form.Control\n                                            name=\"exercise\"\n                                            onChange={(e) => ChangeHandler(e,index, index2)}\n                                            value={item2.exercise}\n                                            placeholder=\"Exercise type\" />\n                                    </Col>\n                                    <Col md={2} >\n                                        <Form.Control\n                                            name=\"reps\"\n                                            onChange={(e) => ChangeHandler(e,index, index2)}\n                                            value={item2.reps}\n                                            placeholder=\"Reps\" />\n                                    </Col>\n                                    <Col md={2}>\n                                        <Form.Control\n                                            name=\"rests\"\n                                            onChange={(e) => ChangeHandler(e,index, index2)}\n                                            value={item2.rests}\n                                            placeholder=\"Rest\" />\n                                    </Col>\n                                    <Col md={2}>\n                                        <Form.Control\n                                            name=\"targets\"\n                                            onChange={(e) => ChangeHandler(e,index, index2)}\n                                            value={item2.targets}\n                                            placeholder=\"Target\" />\n                                    </Col>\n                                    <Col md={2}>\n                                        <Row>\n                                            <Col>{inputForm.sets[index].data.length !== 1 &&\n                                                <Button key={index} className=\"mr10\"\n                                                    onClick={() => RemoveInput(index, index2)}\n                                                    variant=\"outline-danger\"> - </Button>}\n                                            </Col>\n                                            <Col>\n                                                {inputForm.sets[index].data.length - 1 === index2 &&\n                                                    <Button\n                                                        key={index}\n                                                        onClick={()=>AddInput(index)}\n                                                        variant=\"outline-secondary\"> + </Button>}\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            ))}\n\n                        </Form.Group>\n                    ))}\n                    </Form>\n\n                    <Row >\n                        <Col md={12} className=\"d-flex flex-row-reverse\">\n                            <Button \n                            variant=\"warning\" \n                            type=\"submit\"\n                            onClick={submitWorkout}\n                            >Save Exercise</Button>\n                        </Col>\n                    </Row>\n                </Col>\n\n\n            </Row>\n        </Fragment>\n    )\n}\n\nexport default WorkOut\n","/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteDash.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachDash.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/RecentlyCompleted.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/TodaysAgenda.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/PendingAthlete.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/CoachItems/PendingCoachReview.jsx",[],["135","136"],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthRecentlyCompleted.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthPendingResults.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthUpcoming.jsx",[],"/mnt/c/Users/shawn/Documents/GA/Projects/better_athletes/ba-react/src/Components/Routes/Private/DashboardItems/AthleteItems/AthTodayAgenda.jsx",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":20},{"ruleId":"141","severity":1,"message":"145","line":52,"column":11,"nodeType":"143","messageId":"144","endLine":52,"endColumn":15},{"ruleId":"141","severity":1,"message":"146","line":8,"column":22,"nodeType":"143","messageId":"144","endLine":8,"endColumn":33},{"ruleId":"141","severity":1,"message":"147","line":1,"column":27,"nodeType":"143","messageId":"144","endLine":1,"endColumn":36},{"ruleId":"141","severity":1,"message":"148","line":1,"column":38,"nodeType":"143","messageId":"144","endLine":1,"endColumn":46},{"ruleId":"141","severity":1,"message":"149","line":3,"column":18,"nodeType":"143","messageId":"144","endLine":3,"endColumn":29},{"ruleId":"141","severity":1,"message":"150","line":3,"column":39,"nodeType":"143","messageId":"144","endLine":3,"endColumn":50},{"ruleId":"141","severity":1,"message":"151","line":3,"column":63,"nodeType":"143","messageId":"144","endLine":3,"endColumn":72},{"ruleId":"141","severity":1,"message":"152","line":2,"column":34,"nodeType":"143","messageId":"144","endLine":2,"endColumn":48},{"ruleId":"141","severity":1,"message":"153","line":2,"column":50,"nodeType":"143","messageId":"144","endLine":2,"endColumn":58},{"ruleId":"141","severity":1,"message":"154","line":13,"column":21,"nodeType":"143","messageId":"144","endLine":13,"endColumn":31},{"ruleId":"141","severity":1,"message":"155","line":80,"column":17,"nodeType":"143","messageId":"144","endLine":80,"endColumn":25},{"ruleId":"141","severity":1,"message":"156","line":10,"column":12,"nodeType":"143","messageId":"144","endLine":10,"endColumn":16},{"ruleId":"141","severity":1,"message":"157","line":10,"column":18,"nodeType":"143","messageId":"144","endLine":10,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":98,"column":18,"nodeType":"160","messageId":"161","endLine":98,"endColumn":20},{"ruleId":"158","severity":1,"message":"159","line":100,"column":25,"nodeType":"160","messageId":"161","endLine":100,"endColumn":27},{"ruleId":"158","severity":1,"message":"162","line":102,"column":25,"nodeType":"160","messageId":"161","endLine":102,"endColumn":27},{"ruleId":"141","severity":1,"message":"163","line":112,"column":9,"nodeType":"143","messageId":"144","endLine":112,"endColumn":15},{"ruleId":"158","severity":1,"message":"159","line":123,"column":18,"nodeType":"160","messageId":"161","endLine":123,"endColumn":20},{"ruleId":"158","severity":1,"message":"159","line":125,"column":25,"nodeType":"160","messageId":"161","endLine":125,"endColumn":27},{"ruleId":"158","severity":1,"message":"159","line":127,"column":25,"nodeType":"160","messageId":"161","endLine":127,"endColumn":27},{"ruleId":"141","severity":1,"message":"164","line":143,"column":14,"nodeType":"143","messageId":"144","endLine":143,"endColumn":30},{"ruleId":"141","severity":1,"message":"165","line":144,"column":13,"nodeType":"143","messageId":"144","endLine":144,"endColumn":25},{"ruleId":"141","severity":1,"message":"166","line":145,"column":13,"nodeType":"143","messageId":"144","endLine":145,"endColumn":21},{"ruleId":"141","severity":1,"message":"167","line":146,"column":13,"nodeType":"143","messageId":"144","endLine":146,"endColumn":24},{"ruleId":"141","severity":1,"message":"168","line":147,"column":13,"nodeType":"143","messageId":"144","endLine":147,"endColumn":22},{"ruleId":"141","severity":1,"message":"169","line":148,"column":13,"nodeType":"143","messageId":"144","endLine":148,"endColumn":18},{"ruleId":"141","severity":1,"message":"170","line":149,"column":13,"nodeType":"143","messageId":"144","endLine":149,"endColumn":17},{"ruleId":"141","severity":1,"message":"171","line":151,"column":13,"nodeType":"143","messageId":"144","endLine":151,"endColumn":19},{"ruleId":"141","severity":1,"message":"155","line":191,"column":17,"nodeType":"143","messageId":"144","endLine":191,"endColumn":25},{"ruleId":"141","severity":1,"message":"172","line":207,"column":20,"nodeType":"143","messageId":"144","endLine":207,"endColumn":31},{"ruleId":"141","severity":1,"message":"155","line":218,"column":17,"nodeType":"143","messageId":"144","endLine":218,"endColumn":25},{"ruleId":"137","replacedBy":"173"},{"ruleId":"139","replacedBy":"174"},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'InnerNaviBar' is defined but never used.","Identifier","unusedVar","'resp' is assigned a value but never used.","'setUserType' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'NavDropdown' is defined but never used.","'FormControl' is defined but never used.","'Container' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'setWorkout' is assigned a value but never used.","'response' is assigned a value but never used.","'exer' is assigned a value but never used.","'setExer' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'newArr' is assigned a value but never used.","'djangoConversion' is defined but never used.","'exercise_arr' is assigned a value but never used.","'reps_arr' is assigned a value but never used.","'targets_arr' is assigned a value but never used.","'rests_arr' is assigned a value but never used.","'count' is assigned a value but never used.","'data' is assigned a value but never used.","'merged' is assigned a value but never used.","'getAthletes' is defined but never used.",["175"],["176"],"no-global-assign","no-unsafe-negation"]